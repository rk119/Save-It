{
  "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "donor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DonationAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "latitude",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "longitude",
          "type": "string"
        }
      ],
      "name": "DonatorRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        }
      ],
      "name": "getAddressToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        }
      ],
      "name": "getAddressToDonatorData",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ethAmount",
          "type": "uint256"
        }
      ],
      "name": "getConversionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getDonator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntries",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getIdToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_usdAmount",
          "type": "uint256"
        }
      ],
      "name": "getUsdAmountInEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_latitude",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_longitude",
          "type": "string"
        }
      ],
      "name": "registerDonator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_entries",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_totalDonations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_totalDonators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addressDonate",
          "type": "address"
        }
      ],
      "name": "setAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addressDonate",
          "type": "address"
        }
      ],
      "name": "setLotteryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x72992f63eb6f3b4c0426645f11170e9895b5e2a2d838c1f77d1d8748053dc8e8",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "transactionIndex": 0,
    "gasUsed": "2330142",
    "logsBloom": "0x
    "blockHash": "0xd68102662acf1ae50a0577dd17843ff61e2c3732ae67159efa74da2ca62f1d1f",
    "transactionHash": "0x72992f63eb6f3b4c0426645f11170e9895b5e2a2d838c1f77d1d8748053dc8e8",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 3,
        "transactionHash": "0x72992f63eb6f3b4c0426645f11170e9895b5e2a2d838c1f77d1d8748053dc8e8",
        "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xd68102662acf1ae50a0577dd17843ff61e2c3732ae67159efa74da2ca62f1d1f"
      }
    ],
    "blockNumber": 3,
    "cumulativeGasUsed": "2330142",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "fd50ec12183735e1e5a14c0dd3686f27",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DonationAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"latitude\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"longitude\",\"type\":\"string\"}],\"name\":\"DonatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"}],\"name\":\"getAddressToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"}],\"name\":\"getAddressToDonatorData\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ethAmount\",\"type\":\"uint256\"}],\"name\":\"getConversionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getDonator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntries\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getIdToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_usdAmount\",\"type\":\"uint256\"}],\"name\":\"getUsdAmountInEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_latitude\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_longitude\",\"type\":\"string\"}],\"name\":\"registerDonator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_entries\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalDonations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalDonators\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressDonate\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressDonate\",\"type\":\"address\"}],\"name\":\"setLotteryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Donate.sol\":\"Donate\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Donate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ninterface IDonate {\\n    function getUsdAmountInEth(uint256 _usdAmount) external view returns (uint256);\\n    function getDonator(uint256 _index) external view returns (address); \\n    function getAddressToAmount(address _donator) external view returns (uint256);\\n    function getAddressToDonatorData(address _donator) external view returns (string memory, string memory, string memory);\\n    function getIdToAddress(uint256 id) external view returns (address);\\n    function withdraw(address _donator, uint256 _amount) external payable returns(uint256);\\n    function getEntries() external view returns (uint256);\\n}\\n\\ncontract Donate is Ownable {\\n\\n    struct DonatorData {\\n        uint256 amount;\\n        string name;\\n        string latitude;\\n        string longitude;\\n    }\\n    uint256 public constant MINIMUM_USD = 10 * 10**18;\\n    address payable private immutable i_owner;\\n    address private s_pickMe;\\n    address private s_dlottery;\\n    uint256 public s_totalDonators;\\n    uint256 public s_totalDonations;\\n    uint256 public s_entries;\\n    address[] private s_donators;\\n    mapping(address => bool) private s_addressToRegistered;\\n    mapping(address => DonatorData) private s_addressToDonatorData;\\n    mapping(uint256 => address) private s_idToAddress;\\n    AggregatorV3Interface private s_priceFeed;\\n    event DonatorRegistered(uint256 amount, string name, string latitude, string longitude);\\n    event DonationAccepted(address indexed donor, uint256 amount);\\n\\n    constructor(address _priceFeed) {\\n        s_priceFeed = AggregatorV3Interface(_priceFeed);\\n        i_owner = payable(msg.sender);\\n        s_totalDonators = 0;\\n        s_totalDonations = 0;\\n        s_entries = 0;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function getPrice(AggregatorV3Interface _priceFeed) internal view returns (uint256) {\\n        (, int256 answer, , , ) = _priceFeed.latestRoundData();\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    function getConversionRate(uint256 _ethAmount) public view returns (uint256) {\\n        uint256 ethPrice = getPrice(s_priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * _ethAmount) / 1000000000000000000;\\n        return ethAmountInUsd;\\n    }\\n\\n    function divider(uint numerator, uint denominator, uint precision) internal pure returns(uint) {\\n        return numerator*(uint(10)**uint(precision))/denominator;\\n    }\\n\\n    function getUsdAmountInEth(uint256 _usdAmount) external view returns (uint256) {\\n        _usdAmount = _usdAmount * (10 ** 18);\\n        uint256 ethPrice = getPrice(s_priceFeed);\\n        uint256 usdAmountInEth = divider(_usdAmount, ethPrice, 18);\\n        return usdAmountInEth;\\n    }\\n\\n    function registerDonator(string memory _name, string memory _latitude, string memory _longitude) public {\\n        require(msg.sender != i_owner, \\\"Owner cannot register as donator\\\");\\n        require(!s_addressToRegistered[msg.sender], \\\"Already registered\\\");\\n        require(bytes(_name).length > 0, \\\"Invalid. Name cannot be empty\\\");\\n        require(bytes(_longitude).length > 0, \\\"Invalid. Longitude cannot be empty\\\");\\n        require(bytes(_latitude).length > 0, \\\"Invalid. Latitude cannot be empty\\\");\\n        s_totalDonators++;\\n        s_addressToRegistered[msg.sender] = true;\\n        DonatorData memory data = DonatorData(0, _name, _latitude, _longitude);\\n        s_addressToDonatorData[msg.sender] = data;\\n        s_donators.push(msg.sender);\\n        emit DonatorRegistered(0, _name, _latitude, _longitude);\\n    }\\n\\n    function donate() public payable {\\n        require(msg.sender != i_owner, \\\"Owner is already a donator\\\");\\n        require(s_addressToRegistered[msg.sender], \\\"You need to register first!\\\");\\n        require(getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_totalDonations += msg.value;\\n        s_addressToDonatorData[msg.sender].amount += msg.value;\\n        s_idToAddress[++s_entries] = msg.sender;\\n        emit DonationAccepted(msg.sender, msg.value);\\n    }\\n\\n    function getDonator(uint256 _index) external view returns (address) {\\n        return s_donators[_index];\\n    }\\n\\n    function getAddressToAmount(address _donator) external view returns (uint256) {\\n        return s_addressToDonatorData[_donator].amount;\\n    }\\n\\n    function getAddressToDonatorData(address _donator) external view returns (string memory, string memory, string memory) {\\n        return (s_addressToDonatorData[_donator].name, s_addressToDonatorData[_donator].latitude, s_addressToDonatorData[_donator].longitude);\\n    }\\n\\n    function getIdToAddress(uint256 id) external view returns (address) {\\n        return s_idToAddress[id];\\n    }\\n\\n     function setAddress(address _addressDonate) external onlyOwner { \\n        s_pickMe = _addressDonate;\\n    }\\n\\n     function setLotteryAddress(address _addressDonate) external onlyOwner { \\n        s_dlottery = _addressDonate;\\n    }\\n\\n    function getEntries() external view returns (uint256) {\\n        return s_entries;\\n    }\\n\\n    function withdraw(address _donator, uint256 _amount) external payable returns(uint256) {\\n        require(msg.sender == i_owner || msg.sender == s_pickMe, \\\"Not the owner\\\");\\n        require(s_addressToDonatorData[_donator].amount >= _amount, \\\"Can't withdraw more than donated amount!\\\");\\n        s_addressToDonatorData[_donator].amount = s_addressToDonatorData[_donator].amount - _amount;\\n        payable(i_owner).transfer(_amount);\\n        return _amount;\\n    }\\n}\",\"keccak256\":\"0x58963c490d60084194f5e996638224e506c74a958dd36eb2e4f2e5cc650de797\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162002acc38038062002acc8339818101604052810190620000379190620001d1565b620000576200004b620000ee60201b60201c565b620000f660201b60201c565b80600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250506000600381905550600060048190555060006005819055505062000256565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001cb816200023c565b92915050565b600060208284031215620001ea57620001e962000237565b5b6000620001fa84828501620001ba565b91505092915050565b6000620002108262000217565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620002478162000203565b81146200025357600080fd5b50565b60805160601c6128426200028a60003960008181610a4901528181610ed201528181611262015261146101526128426000f3fe60806040526004361061011f5760003560e01c80639e87a5cd116100a0578063e30081a011610064578063e30081a0146103ed578063ed88c68e14610416578063f2fde38b14610420578063f3fef3a314610449578063faa381fb146104795761011f565b80639e87a5cd146102e0578063b65ce11c1461030b578063c0f8cffc14610348578063cc97d44b14610385578063cf3c06bb146103c45761011f565b80637b66e17f116100e75780637b66e17f146101f75780637bdfd6d5146102345780637f3584391461025f5780638da5cb5b1461028a57806397732df5146102b55761011f565b806317be85c3146101245780632a332b2a1461014f5780636b69a592146101785780636e5b6b28146101a3578063715018a6146101e0575b600080fd5b34801561013057600080fd5b506101396104b6565b6040516101469190611e53565b60405180910390f35b34801561015b57600080fd5b5061017660048036038101906101719190611822565b6104c0565b005b34801561018457600080fd5b5061018d610580565b60405161019a9190611e53565b60405180910390f35b3480156101af57600080fd5b506101ca60048036038101906101c59190611936565b61058c565b6040516101d79190611e53565b60405180910390f35b3480156101ec57600080fd5b506101f56105e9565b005b34801561020357600080fd5b5061021e60048036038101906102199190611936565b610671565b60405161022b9190611bf7565b60405180910390f35b34801561024057600080fd5b506102496106b9565b6040516102569190611e53565b60405180910390f35b34801561026b57600080fd5b506102746106bf565b6040516102819190611e53565b60405180910390f35b34801561029657600080fd5b5061029f6106c5565b6040516102ac9190611bf7565b60405180910390f35b3480156102c157600080fd5b506102ca6106ee565b6040516102d79190611e53565b60405180910390f35b3480156102ec57600080fd5b506102f56106f4565b6040516103029190611c12565b60405180910390f35b34801561031757600080fd5b50610332600480360381019061032d9190611936565b61071e565b60405161033f9190611e53565b60405180910390f35b34801561035457600080fd5b5061036f600480360381019061036a9190611822565b61077f565b60405161037c9190611e53565b60405180910390f35b34801561039157600080fd5b506103ac60048036038101906103a79190611822565b6107cb565b6040516103bb93929190611c87565b60405180910390f35b3480156103d057600080fd5b506103eb60048036038101906103e6919061188f565b610a47565b005b3480156103f957600080fd5b50610414600480360381019061040f9190611822565b610e10565b005b61041e610ed0565b005b34801561042c57600080fd5b5061044760048036038101906104429190611822565b611166565b005b610463600480360381019061045e919061184f565b61125e565b6040516104709190611e53565b60405180910390f35b34801561048557600080fd5b506104a0600480360381019061049b9190611936565b6114cf565b6040516104ad9190611bf7565b60405180910390f35b6000600554905090565b6104c861150c565b73ffffffffffffffffffffffffffffffffffffffff166104e66106c5565b73ffffffffffffffffffffffffffffffffffffffff161461053c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053390611dd3565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b678ac7230489e8000081565b6000806105ba600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611514565b90506000670de0b6b3a764000084836105d391906121ef565b6105dd9190611f36565b90508092505050919050565b6105f161150c565b73ffffffffffffffffffffffffffffffffffffffff1661060f6106c5565b73ffffffffffffffffffffffffffffffffffffffff1614610665576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065c90611dd3565b60405180910390fd5b61066f60006115b4565b565b6000600682815481106106875761068661249c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60055481565b60045481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000670de0b6b3a76400008261073491906121ef565b91506000610763600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611514565b9050600061077384836012611678565b90508092505050919050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b6060806060600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018280546108a290612363565b80601f01602080910402602001604051908101604052809291908181526020018280546108ce90612363565b801561091b5780601f106108f05761010080835404028352916020019161091b565b820191906000526020600020905b8154815290600101906020018083116108fe57829003601f168201915b5050505050925081805461092e90612363565b80601f016020809104026020016040519081016040528092919081815260200182805461095a90612363565b80156109a75780601f1061097c576101008083540402835291602001916109a7565b820191906000526020600020905b81548152906001019060200180831161098a57829003601f168201915b505050505091508080546109ba90612363565b80601f01602080910402602001604051908101604052809291908181526020018280546109e690612363565b8015610a335780601f10610a0857610100808354040283529160200191610a33565b820191906000526020600020905b815481529060010190602001808311610a1657829003601f168201915b505050505090509250925092509193909250565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610ad6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610acd90611e33565b60405180910390fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610b63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5a90611d13565b60405180910390fd5b6000835111610ba7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9e90611cf3565b60405180910390fd5b6000815111610beb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be290611e13565b60405180910390fd5b6000825111610c2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2690611d53565b60405180910390fd5b60036000815480929190610c42906123c6565b91905055506001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600060405180608001604052806000815260200185815260200184815260200183815250905080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001019080519060200190610d2b9291906116a6565b506040820151816002019080519060200190610d489291906116a6565b506060820151816003019080519060200190610d659291906116a6565b509050506006339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fe9f39fb6db7e0aea1569ad4adbc00390e6e9e7eec20e749b1560054a83147f4d6000858585604051610e029493929190611c2d565b60405180910390a150505050565b610e1861150c565b73ffffffffffffffffffffffffffffffffffffffff16610e366106c5565b73ffffffffffffffffffffffffffffffffffffffff1614610e8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8390611dd3565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610f5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5690611df3565b60405180910390fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610feb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe290611d73565b60405180910390fd5b678ac7230489e80000610ffd3461058c565b101561103e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103590611d33565b60405180910390fd5b34600460008282546110509190611ee0565b9250508190555034600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546110a99190611ee0565b9250508190555033600960006005600081546110c4906123c6565b919050819055815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f5d7b332009e5ea66f8cd6b2238038a62b1614c1a9df2ea82cb185ba7db1e047a3460405161115c9190611e53565b60405180910390a2565b61116e61150c565b73ffffffffffffffffffffffffffffffffffffffff1661118c6106c5565b73ffffffffffffffffffffffffffffffffffffffff16146111e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d990611dd3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124990611cd3565b60405180910390fd5b61125b816115b4565b50565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806113075750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b611346576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133d90611d93565b60405180910390fd5b81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015410156113cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c290611db3565b60405180910390fd5b81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546114199190612249565b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156114c5573d6000803e3d6000fd5b5081905092915050565b60006009600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561155d57600080fd5b505afa158015611571573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115959190611963565b5050509150506402540be400816115ac91906120d8565b915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008282600a6116889190611fba565b8561169391906121ef565b61169d9190611f36565b90509392505050565b8280546116b290612363565b90600052602060002090601f0160209004810192826116d4576000855561171b565b82601f106116ed57805160ff191683800117855561171b565b8280016001018555821561171b579182015b8281111561171a5782518255916020019190600101906116ff565b5b509050611728919061172c565b5090565b5b8082111561174557600081600090555060010161172d565b5090565b600061175c61175784611e93565b611e6e565b905082815260208101848484011115611778576117776124ff565b5b611783848285612321565b509392505050565b60008135905061179a816127b0565b92915050565b6000815190506117af816127c7565b92915050565b600082601f8301126117ca576117c96124fa565b5b81356117da848260208601611749565b91505092915050565b6000813590506117f2816127de565b92915050565b600081519050611807816127de565b92915050565b60008151905061181c816127f5565b92915050565b60006020828403121561183857611837612509565b5b60006118468482850161178b565b91505092915050565b6000806040838503121561186657611865612509565b5b60006118748582860161178b565b9250506020611885858286016117e3565b9150509250929050565b6000806000606084860312156118a8576118a7612509565b5b600084013567ffffffffffffffff8111156118c6576118c5612504565b5b6118d2868287016117b5565b935050602084013567ffffffffffffffff8111156118f3576118f2612504565b5b6118ff868287016117b5565b925050604084013567ffffffffffffffff8111156119205761191f612504565b5b61192c868287016117b5565b9150509250925092565b60006020828403121561194c5761194b612509565b5b600061195a848285016117e3565b91505092915050565b600080600080600060a0868803121561197f5761197e612509565b5b600061198d8882890161180d565b955050602061199e888289016117a0565b94505060406119af888289016117f8565b93505060606119c0888289016117f8565b92505060806119d18882890161180d565b9150509295509295909350565b6119e78161227d565b82525050565b6119f6816122d9565b82525050565b611a05816122eb565b82525050565b6000611a1682611ec4565b611a208185611ecf565b9350611a30818560208601612330565b611a398161250e565b840191505092915050565b6000611a51602683611ecf565b9150611a5c8261252c565b604082019050919050565b6000611a74601d83611ecf565b9150611a7f8261257b565b602082019050919050565b6000611a97601283611ecf565b9150611aa2826125a4565b602082019050919050565b6000611aba601b83611ecf565b9150611ac5826125cd565b602082019050919050565b6000611add602183611ecf565b9150611ae8826125f6565b604082019050919050565b6000611b00601b83611ecf565b9150611b0b82612645565b602082019050919050565b6000611b23600d83611ecf565b9150611b2e8261266e565b602082019050919050565b6000611b46602883611ecf565b9150611b5182612697565b604082019050919050565b6000611b69602083611ecf565b9150611b74826126e6565b602082019050919050565b6000611b8c601a83611ecf565b9150611b978261270f565b602082019050919050565b6000611baf602283611ecf565b9150611bba82612738565b604082019050919050565b6000611bd2602083611ecf565b9150611bdd82612787565b602082019050919050565b611bf1816122b9565b82525050565b6000602082019050611c0c60008301846119de565b92915050565b6000602082019050611c2760008301846119ed565b92915050565b6000608082019050611c4260008301876119fc565b8181036020830152611c548186611a0b565b90508181036040830152611c688185611a0b565b90508181036060830152611c7c8184611a0b565b905095945050505050565b60006060820190508181036000830152611ca18186611a0b565b90508181036020830152611cb58185611a0b565b90508181036040830152611cc98184611a0b565b9050949350505050565b60006020820190508181036000830152611cec81611a44565b9050919050565b60006020820190508181036000830152611d0c81611a67565b9050919050565b60006020820190508181036000830152611d2c81611a8a565b9050919050565b60006020820190508181036000830152611d4c81611aad565b9050919050565b60006020820190508181036000830152611d6c81611ad0565b9050919050565b60006020820190508181036000830152611d8c81611af3565b9050919050565b60006020820190508181036000830152611dac81611b16565b9050919050565b60006020820190508181036000830152611dcc81611b39565b9050919050565b60006020820190508181036000830152611dec81611b5c565b9050919050565b60006020820190508181036000830152611e0c81611b7f565b9050919050565b60006020820190508181036000830152611e2c81611ba2565b9050919050565b60006020820190508181036000830152611e4c81611bc5565b9050919050565b6000602082019050611e686000830184611be8565b92915050565b6000611e78611e89565b9050611e848282612395565b919050565b6000604051905090565b600067ffffffffffffffff821115611eae57611ead6124cb565b5b611eb78261250e565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000611eeb826122b9565b9150611ef6836122b9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611f2b57611f2a61240f565b5b828201905092915050565b6000611f41826122b9565b9150611f4c836122b9565b925082611f5c57611f5b61243e565b5b828204905092915050565b6000808291508390505b6001851115611fb157808604811115611f8d57611f8c61240f565b5b6001851615611f9c5780820291505b8081029050611faa8561251f565b9450611f71565b94509492505050565b6000611fc5826122b9565b9150611fd0836122b9565b9250611ffd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612005565b905092915050565b60008261201557600190506120d1565b8161202357600090506120d1565b8160018114612039576002811461204357612072565b60019150506120d1565b60ff8411156120555761205461240f565b5b8360020a91508482111561206c5761206b61240f565b5b506120d1565b5060208310610133831016604e8410600b84101617156120a75782820a9050838111156120a2576120a161240f565b5b6120d1565b6120b48484846001611f67565b925090508184048111156120cb576120ca61240f565b5b81810290505b9392505050565b60006120e38261228f565b91506120ee8361228f565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561212d5761212c61240f565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561216a5761216961240f565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156121a7576121a661240f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156121e4576121e361240f565b5b828202905092915050565b60006121fa826122b9565b9150612205836122b9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561223e5761223d61240f565b5b828202905092915050565b6000612254826122b9565b915061225f836122b9565b9250828210156122725761227161240f565b5b828203905092915050565b600061228882612299565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b60006122e4826122fd565b9050919050565b60006122f6826122b9565b9050919050565b60006123088261230f565b9050919050565b600061231a82612299565b9050919050565b82818337600083830152505050565b60005b8381101561234e578082015181840152602081019050612333565b8381111561235d576000848401525b50505050565b6000600282049050600182168061237b57607f821691505b6020821081141561238f5761238e61246d565b5b50919050565b61239e8261250e565b810181811067ffffffffffffffff821117156123bd576123bc6124cb565b5b80604052505050565b60006123d1826122b9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156124045761240361240f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c69642e204e616d652063616e6e6f7420626520656d707479000000600082015250565b7f416c726561647920726567697374657265640000000000000000000000000000600082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b7f496e76616c69642e204c617469747564652063616e6e6f7420626520656d707460008201527f7900000000000000000000000000000000000000000000000000000000000000602082015250565b7f596f75206e65656420746f207265676973746572206669727374210000000000600082015250565b7f4e6f7420746865206f776e657200000000000000000000000000000000000000600082015250565b7f43616e2774207769746864726177206d6f7265207468616e20646f6e6174656460008201527f20616d6f756e7421000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4f776e657220697320616c7265616479206120646f6e61746f72000000000000600082015250565b7f496e76616c69642e204c6f6e6769747564652063616e6e6f7420626520656d7060008201527f7479000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e65722063616e6e6f7420726567697374657220617320646f6e61746f72600082015250565b6127b98161227d565b81146127c457600080fd5b50565b6127d08161228f565b81146127db57600080fd5b50565b6127e7816122b9565b81146127f257600080fd5b50565b6127fe816122c3565b811461280957600080fd5b5056fea2646970667358221220638b56dd4b5c92da9cedc0c292b2509ce2635a6561ec87059d57f819f1b656c964736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061011f5760003560e01c80639e87a5cd116100a0578063e30081a011610064578063e30081a0146103ed578063ed88c68e14610416578063f2fde38b14610420578063f3fef3a314610449578063faa381fb146104795761011f565b80639e87a5cd146102e0578063b65ce11c1461030b578063c0f8cffc14610348578063cc97d44b14610385578063cf3c06bb146103c45761011f565b80637b66e17f116100e75780637b66e17f146101f75780637bdfd6d5146102345780637f3584391461025f5780638da5cb5b1461028a57806397732df5146102b55761011f565b806317be85c3146101245780632a332b2a1461014f5780636b69a592146101785780636e5b6b28146101a3578063715018a6146101e0575b600080fd5b34801561013057600080fd5b506101396104b6565b6040516101469190611e53565b60405180910390f35b34801561015b57600080fd5b5061017660048036038101906101719190611822565b6104c0565b005b34801561018457600080fd5b5061018d610580565b60405161019a9190611e53565b60405180910390f35b3480156101af57600080fd5b506101ca60048036038101906101c59190611936565b61058c565b6040516101d79190611e53565b60405180910390f35b3480156101ec57600080fd5b506101f56105e9565b005b34801561020357600080fd5b5061021e60048036038101906102199190611936565b610671565b60405161022b9190611bf7565b60405180910390f35b34801561024057600080fd5b506102496106b9565b6040516102569190611e53565b60405180910390f35b34801561026b57600080fd5b506102746106bf565b6040516102819190611e53565b60405180910390f35b34801561029657600080fd5b5061029f6106c5565b6040516102ac9190611bf7565b60405180910390f35b3480156102c157600080fd5b506102ca6106ee565b6040516102d79190611e53565b60405180910390f35b3480156102ec57600080fd5b506102f56106f4565b6040516103029190611c12565b60405180910390f35b34801561031757600080fd5b50610332600480360381019061032d9190611936565b61071e565b60405161033f9190611e53565b60405180910390f35b34801561035457600080fd5b5061036f600480360381019061036a9190611822565b61077f565b60405161037c9190611e53565b60405180910390f35b34801561039157600080fd5b506103ac60048036038101906103a79190611822565b6107cb565b6040516103bb93929190611c87565b60405180910390f35b3480156103d057600080fd5b506103eb60048036038101906103e6919061188f565b610a47565b005b3480156103f957600080fd5b50610414600480360381019061040f9190611822565b610e10565b005b61041e610ed0565b005b34801561042c57600080fd5b5061044760048036038101906104429190611822565b611166565b005b610463600480360381019061045e919061184f565b61125e565b6040516104709190611e53565b60405180910390f35b34801561048557600080fd5b506104a0600480360381019061049b9190611936565b6114cf565b6040516104ad9190611bf7565b60405180910390f35b6000600554905090565b6104c861150c565b73ffffffffffffffffffffffffffffffffffffffff166104e66106c5565b73ffffffffffffffffffffffffffffffffffffffff161461053c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053390611dd3565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b678ac7230489e8000081565b6000806105ba600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611514565b90506000670de0b6b3a764000084836105d391906121ef565b6105dd9190611f36565b90508092505050919050565b6105f161150c565b73ffffffffffffffffffffffffffffffffffffffff1661060f6106c5565b73ffffffffffffffffffffffffffffffffffffffff1614610665576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065c90611dd3565b60405180910390fd5b61066f60006115b4565b565b6000600682815481106106875761068661249c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60055481565b60045481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000670de0b6b3a76400008261073491906121ef565b91506000610763600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611514565b9050600061077384836012611678565b90508092505050919050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b6060806060600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018280546108a290612363565b80601f01602080910402602001604051908101604052809291908181526020018280546108ce90612363565b801561091b5780601f106108f05761010080835404028352916020019161091b565b820191906000526020600020905b8154815290600101906020018083116108fe57829003601f168201915b5050505050925081805461092e90612363565b80601f016020809104026020016040519081016040528092919081815260200182805461095a90612363565b80156109a75780601f1061097c576101008083540402835291602001916109a7565b820191906000526020600020905b81548152906001019060200180831161098a57829003601f168201915b505050505091508080546109ba90612363565b80601f01602080910402602001604051908101604052809291908181526020018280546109e690612363565b8015610a335780601f10610a0857610100808354040283529160200191610a33565b820191906000526020600020905b815481529060010190602001808311610a1657829003601f168201915b505050505090509250925092509193909250565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610ad6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610acd90611e33565b60405180910390fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610b63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5a90611d13565b60405180910390fd5b6000835111610ba7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9e90611cf3565b60405180910390fd5b6000815111610beb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be290611e13565b60405180910390fd5b6000825111610c2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2690611d53565b60405180910390fd5b60036000815480929190610c42906123c6565b91905055506001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600060405180608001604052806000815260200185815260200184815260200183815250905080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001019080519060200190610d2b9291906116a6565b506040820151816002019080519060200190610d489291906116a6565b506060820151816003019080519060200190610d659291906116a6565b509050506006339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fe9f39fb6db7e0aea1569ad4adbc00390e6e9e7eec20e749b1560054a83147f4d6000858585604051610e029493929190611c2d565b60405180910390a150505050565b610e1861150c565b73ffffffffffffffffffffffffffffffffffffffff16610e366106c5565b73ffffffffffffffffffffffffffffffffffffffff1614610e8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8390611dd3565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610f5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5690611df3565b60405180910390fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610feb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe290611d73565b60405180910390fd5b678ac7230489e80000610ffd3461058c565b101561103e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103590611d33565b60405180910390fd5b34600460008282546110509190611ee0565b9250508190555034600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546110a99190611ee0565b9250508190555033600960006005600081546110c4906123c6565b919050819055815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f5d7b332009e5ea66f8cd6b2238038a62b1614c1a9df2ea82cb185ba7db1e047a3460405161115c9190611e53565b60405180910390a2565b61116e61150c565b73ffffffffffffffffffffffffffffffffffffffff1661118c6106c5565b73ffffffffffffffffffffffffffffffffffffffff16146111e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d990611dd3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124990611cd3565b60405180910390fd5b61125b816115b4565b50565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806113075750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b611346576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133d90611d93565b60405180910390fd5b81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015410156113cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c290611db3565b60405180910390fd5b81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546114199190612249565b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156114c5573d6000803e3d6000fd5b5081905092915050565b60006009600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561155d57600080fd5b505afa158015611571573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115959190611963565b5050509150506402540be400816115ac91906120d8565b915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008282600a6116889190611fba565b8561169391906121ef565b61169d9190611f36565b90509392505050565b8280546116b290612363565b90600052602060002090601f0160209004810192826116d4576000855561171b565b82601f106116ed57805160ff191683800117855561171b565b8280016001018555821561171b579182015b8281111561171a5782518255916020019190600101906116ff565b5b509050611728919061172c565b5090565b5b8082111561174557600081600090555060010161172d565b5090565b600061175c61175784611e93565b611e6e565b905082815260208101848484011115611778576117776124ff565b5b611783848285612321565b509392505050565b60008135905061179a816127b0565b92915050565b6000815190506117af816127c7565b92915050565b600082601f8301126117ca576117c96124fa565b5b81356117da848260208601611749565b91505092915050565b6000813590506117f2816127de565b92915050565b600081519050611807816127de565b92915050565b60008151905061181c816127f5565b92915050565b60006020828403121561183857611837612509565b5b60006118468482850161178b565b91505092915050565b6000806040838503121561186657611865612509565b5b60006118748582860161178b565b9250506020611885858286016117e3565b9150509250929050565b6000806000606084860312156118a8576118a7612509565b5b600084013567ffffffffffffffff8111156118c6576118c5612504565b5b6118d2868287016117b5565b935050602084013567ffffffffffffffff8111156118f3576118f2612504565b5b6118ff868287016117b5565b925050604084013567ffffffffffffffff8111156119205761191f612504565b5b61192c868287016117b5565b9150509250925092565b60006020828403121561194c5761194b612509565b5b600061195a848285016117e3565b91505092915050565b600080600080600060a0868803121561197f5761197e612509565b5b600061198d8882890161180d565b955050602061199e888289016117a0565b94505060406119af888289016117f8565b93505060606119c0888289016117f8565b92505060806119d18882890161180d565b9150509295509295909350565b6119e78161227d565b82525050565b6119f6816122d9565b82525050565b611a05816122eb565b82525050565b6000611a1682611ec4565b611a208185611ecf565b9350611a30818560208601612330565b611a398161250e565b840191505092915050565b6000611a51602683611ecf565b9150611a5c8261252c565b604082019050919050565b6000611a74601d83611ecf565b9150611a7f8261257b565b602082019050919050565b6000611a97601283611ecf565b9150611aa2826125a4565b602082019050919050565b6000611aba601b83611ecf565b9150611ac5826125cd565b602082019050919050565b6000611add602183611ecf565b9150611ae8826125f6565b604082019050919050565b6000611b00601b83611ecf565b9150611b0b82612645565b602082019050919050565b6000611b23600d83611ecf565b9150611b2e8261266e565b602082019050919050565b6000611b46602883611ecf565b9150611b5182612697565b604082019050919050565b6000611b69602083611ecf565b9150611b74826126e6565b602082019050919050565b6000611b8c601a83611ecf565b9150611b978261270f565b602082019050919050565b6000611baf602283611ecf565b9150611bba82612738565b604082019050919050565b6000611bd2602083611ecf565b9150611bdd82612787565b602082019050919050565b611bf1816122b9565b82525050565b6000602082019050611c0c60008301846119de565b92915050565b6000602082019050611c2760008301846119ed565b92915050565b6000608082019050611c4260008301876119fc565b8181036020830152611c548186611a0b565b90508181036040830152611c688185611a0b565b90508181036060830152611c7c8184611a0b565b905095945050505050565b60006060820190508181036000830152611ca18186611a0b565b90508181036020830152611cb58185611a0b565b90508181036040830152611cc98184611a0b565b9050949350505050565b60006020820190508181036000830152611cec81611a44565b9050919050565b60006020820190508181036000830152611d0c81611a67565b9050919050565b60006020820190508181036000830152611d2c81611a8a565b9050919050565b60006020820190508181036000830152611d4c81611aad565b9050919050565b60006020820190508181036000830152611d6c81611ad0565b9050919050565b60006020820190508181036000830152611d8c81611af3565b9050919050565b60006020820190508181036000830152611dac81611b16565b9050919050565b60006020820190508181036000830152611dcc81611b39565b9050919050565b60006020820190508181036000830152611dec81611b5c565b9050919050565b60006020820190508181036000830152611e0c81611b7f565b9050919050565b60006020820190508181036000830152611e2c81611ba2565b9050919050565b60006020820190508181036000830152611e4c81611bc5565b9050919050565b6000602082019050611e686000830184611be8565b92915050565b6000611e78611e89565b9050611e848282612395565b919050565b6000604051905090565b600067ffffffffffffffff821115611eae57611ead6124cb565b5b611eb78261250e565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000611eeb826122b9565b9150611ef6836122b9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611f2b57611f2a61240f565b5b828201905092915050565b6000611f41826122b9565b9150611f4c836122b9565b925082611f5c57611f5b61243e565b5b828204905092915050565b6000808291508390505b6001851115611fb157808604811115611f8d57611f8c61240f565b5b6001851615611f9c5780820291505b8081029050611faa8561251f565b9450611f71565b94509492505050565b6000611fc5826122b9565b9150611fd0836122b9565b9250611ffd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612005565b905092915050565b60008261201557600190506120d1565b8161202357600090506120d1565b8160018114612039576002811461204357612072565b60019150506120d1565b60ff8411156120555761205461240f565b5b8360020a91508482111561206c5761206b61240f565b5b506120d1565b5060208310610133831016604e8410600b84101617156120a75782820a9050838111156120a2576120a161240f565b5b6120d1565b6120b48484846001611f67565b925090508184048111156120cb576120ca61240f565b5b81810290505b9392505050565b60006120e38261228f565b91506120ee8361228f565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561212d5761212c61240f565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561216a5761216961240f565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156121a7576121a661240f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156121e4576121e361240f565b5b828202905092915050565b60006121fa826122b9565b9150612205836122b9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561223e5761223d61240f565b5b828202905092915050565b6000612254826122b9565b915061225f836122b9565b9250828210156122725761227161240f565b5b828203905092915050565b600061228882612299565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b60006122e4826122fd565b9050919050565b60006122f6826122b9565b9050919050565b60006123088261230f565b9050919050565b600061231a82612299565b9050919050565b82818337600083830152505050565b60005b8381101561234e578082015181840152602081019050612333565b8381111561235d576000848401525b50505050565b6000600282049050600182168061237b57607f821691505b6020821081141561238f5761238e61246d565b5b50919050565b61239e8261250e565b810181811067ffffffffffffffff821117156123bd576123bc6124cb565b5b80604052505050565b60006123d1826122b9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156124045761240361240f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c69642e204e616d652063616e6e6f7420626520656d707479000000600082015250565b7f416c726561647920726567697374657265640000000000000000000000000000600082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b7f496e76616c69642e204c617469747564652063616e6e6f7420626520656d707460008201527f7900000000000000000000000000000000000000000000000000000000000000602082015250565b7f596f75206e65656420746f207265676973746572206669727374210000000000600082015250565b7f4e6f7420746865206f776e657200000000000000000000000000000000000000600082015250565b7f43616e2774207769746864726177206d6f7265207468616e20646f6e6174656460008201527f20616d6f756e7421000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4f776e657220697320616c7265616479206120646f6e61746f72000000000000600082015250565b7f496e76616c69642e204c6f6e6769747564652063616e6e6f7420626520656d7060008201527f7479000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e65722063616e6e6f7420726567697374657220617320646f6e61746f72600082015250565b6127b98161227d565b81146127c457600080fd5b50565b6127d08161228f565b81146127db57600080fd5b50565b6127e7816122b9565b81146127f257600080fd5b50565b6127fe816122c3565b811461280957600080fd5b5056fea2646970667358221220638b56dd4b5c92da9cedc0c292b2509ce2635a6561ec87059d57f819f1b656c964736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 219,
        "contract": "contracts/Donate.sol:Donate",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 851,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_pickMe",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 853,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_dlottery",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 855,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_totalDonators",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 857,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_totalDonations",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 859,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_entries",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 862,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_donators",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 866,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_addressToRegistered",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 871,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_addressToDonatorData",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(DonatorData)840_storage)"
      },
      {
        "astId": 875,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_idToAddress",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 878,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(AggregatorV3Interface)103"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)103": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(DonatorData)840_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Donate.DonatorData)",
        "numberOfBytes": "32",
        "value": "t_struct(DonatorData)840_storage"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(DonatorData)840_storage": {
        "encoding": "inplace",
        "label": "struct Donate.DonatorData",
        "members": [
          {
            "astId": 833,
            "contract": "contracts/Donate.sol:Donate",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 835,
            "contract": "contracts/Donate.sol:Donate",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 837,
            "contract": "contracts/Donate.sol:Donate",
            "label": "latitude",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 839,
            "contract": "contracts/Donate.sol:Donate",
            "label": "longitude",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}