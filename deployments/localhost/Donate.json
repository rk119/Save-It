{
  "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "donor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DonationAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "latitude",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "longitude",
          "type": "string"
        }
      ],
      "name": "DonatorRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        }
      ],
      "name": "getAddressToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ethAmount",
          "type": "uint256"
        }
      ],
      "name": "getConversionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getDonator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDonators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntries",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getIdToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_usdAmount",
          "type": "uint256"
        }
      ],
      "name": "getUsdAmountInEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetEntries",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_entries",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_totalDonations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_totalDonators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addressDonate",
          "type": "address"
        }
      ],
      "name": "setAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addressDonate",
          "type": "address"
        }
      ],
      "name": "setLotteryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x501d71cad6f9a493ecda90c1a123aeff8f225eee53beaeacd9854e1baaa0fcd9",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "transactionIndex": 0,
    "gasUsed": "1618852",
    "logsBloom": "0x
    "blockHash": "0x5ad86d2d9df4d89cca04dae611941abd46b2a4b04a05142a600115343480f598",
    "transactionHash": "0x501d71cad6f9a493ecda90c1a123aeff8f225eee53beaeacd9854e1baaa0fcd9",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 3,
        "transactionHash": "0x501d71cad6f9a493ecda90c1a123aeff8f225eee53beaeacd9854e1baaa0fcd9",
        "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x5ad86d2d9df4d89cca04dae611941abd46b2a4b04a05142a600115343480f598"
      }
    ],
    "blockNumber": 3,
    "cumulativeGasUsed": "1618852",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "d17544efa395a0426475d5541fc2959c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DonationAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"latitude\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"longitude\",\"type\":\"string\"}],\"name\":\"DonatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"}],\"name\":\"getAddressToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ethAmount\",\"type\":\"uint256\"}],\"name\":\"getConversionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getDonator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDonators\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntries\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getIdToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_usdAmount\",\"type\":\"uint256\"}],\"name\":\"getUsdAmountInEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetEntries\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_entries\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalDonations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalDonators\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressDonate\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressDonate\",\"type\":\"address\"}],\"name\":\"setLotteryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Donate.sol\":\"Donate\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Donate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ninterface IDonate {\\n    function getUsdAmountInEth(uint256 _usdAmount) external view returns (uint256);\\n    function getDonator(uint256 _index) external view returns (address); \\n    function getAddressToAmount(address _donator) external view returns (uint256);\\n    function getIdToAddress(uint256 id) external view returns (address);\\n    function withdraw(address _donator, uint256 _amount) external payable returns(uint256);\\n    function getEntries() external view returns (uint256);\\n    function resetEntries() external;\\n}\\n\\ncontract Donate is Ownable {\\n    uint256 public constant MINIMUM_USD = 10 * 10**18;\\n    address payable private immutable i_owner;\\n    address private s_pickMe;\\n    address private s_dlottery;\\n    uint256 public s_totalDonators;\\n    uint256 public s_totalDonations;\\n    uint256 public s_entries;\\n    address[] private s_donators;\\n    mapping(address => bool) private s_addressToRegistered;\\n    mapping(address => uint256) private s_addressToAmount;\\n    mapping(uint256 => address) private s_idToAddress;\\n    AggregatorV3Interface private s_priceFeed;\\n    event DonatorRegistered(uint256 amount, string name, string latitude, string longitude);\\n    event DonationAccepted(address indexed donor, uint256 amount);\\n\\n    constructor(address _priceFeed) {\\n        s_priceFeed = AggregatorV3Interface(_priceFeed);\\n        i_owner = payable(msg.sender);\\n        s_totalDonators = 0;\\n        s_totalDonations = 0;\\n        s_entries = 0;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function getPrice(AggregatorV3Interface _priceFeed) internal view returns (uint256) {\\n        (, int256 answer, , , ) = _priceFeed.latestRoundData();\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    function getConversionRate(uint256 _ethAmount) public view returns (uint256) {\\n        uint256 ethPrice = getPrice(s_priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * _ethAmount) / 1000000000000000000;\\n        return ethAmountInUsd;\\n    }\\n\\n    function divider(uint numerator, uint denominator, uint precision) internal pure returns(uint) {\\n        return numerator*(uint(10)**uint(precision))/denominator;\\n    }\\n\\n    function getUsdAmountInEth(uint256 _usdAmount) external view returns (uint256) {\\n        _usdAmount = _usdAmount * (10 ** 18);\\n        uint256 ethPrice = getPrice(s_priceFeed);\\n        uint256 usdAmountInEth = divider(_usdAmount, ethPrice, 18);\\n        return usdAmountInEth;\\n    }\\n\\n    function donate() public payable {\\n        require(msg.sender != i_owner, \\\"Owner is already a donator\\\");\\n        require(getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        if (!s_addressToRegistered[msg.sender]) {\\n            s_totalDonators++;\\n            s_addressToRegistered[msg.sender] = true;\\n            s_donators.push(msg.sender);\\n        }\\n        s_totalDonations += msg.value;\\n        s_addressToAmount[msg.sender] += msg.value;\\n        s_idToAddress[++s_entries] = msg.sender;\\n        emit DonationAccepted(msg.sender, msg.value);\\n    }\\n\\n    function withdraw(address _donator, uint256 _amount) external payable returns(uint256) {\\n        require(msg.sender == i_owner || msg.sender == s_pickMe, \\\"Not the owner\\\");\\n        require(s_addressToAmount[_donator] >= _amount, \\\"Can't withdraw more than donated amount!\\\");\\n        s_addressToAmount[_donator] = s_addressToAmount[_donator] - _amount;\\n        payable(i_owner).transfer(_amount);\\n        return _amount;\\n    }\\n\\n    /* getter functions */\\n\\n    function getDonator(uint256 _index) external view returns (address) {\\n        return s_donators[_index];\\n    }\\n\\n    function getDonators() external view returns (uint256) {\\n        return s_totalDonators;\\n    }\\n\\n    function getAddressToAmount(address _donator) external view returns (uint256) {\\n        return s_addressToAmount[_donator];\\n    }\\n\\n    function getIdToAddress(uint256 id) external view returns (address) {\\n        return s_idToAddress[id];\\n    }\\n\\n    function getEntries() external view returns (uint256) {\\n        return s_entries;\\n    }\\n\\n    /* setter functions */\\n\\n     function setAddress(address _addressDonate) external { \\n        s_pickMe = _addressDonate;\\n    }\\n\\n    function setLotteryAddress(address _addressDonate) external { \\n        s_dlottery = _addressDonate;\\n    }\\n\\n    function resetEntries() external {\\n        require(msg.sender == i_owner || msg.sender == s_dlottery, \\\"Not the owner\\\");\\n        s_entries = 0;\\n    }\\n\\n}\",\"keccak256\":\"0x7f9ee4ad470664f2d6bbd5f9c4d27eb8ca860453cc3e70ffcbab13f625bde3a8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162001ddb38038062001ddb8339818101604052810190620000379190620001d1565b620000576200004b620000ee60201b60201c565b620000f660201b60201c565b80600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250506000600381905550600060048190555060006005819055505062000256565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001cb816200023c565b92915050565b600060208284031215620001ea57620001e962000237565b5b6000620001fa84828501620001ba565b91505092915050565b6000620002108262000217565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620002478162000203565b81146200025357600080fd5b50565b60805160601c611b516200028a600039600081816104e00152818161086601528181610c8c0152610e820152611b516000f3fe60806040526004361061011f5760003560e01c806397732df5116100a0578063e30081a011610064578063e30081a0146103c7578063ed88c68e146103f0578063f2fde38b146103fa578063f3fef3a314610423578063faa381fb146104535761011f565b806397732df5146102cc5780639e87a5cd146102f7578063b65ce11c14610322578063bf1482fa1461035f578063c0f8cffc1461038a5761011f565b8063715018a6116100e7578063715018a6146101f75780637b66e17f1461020e5780637bdfd6d51461024b5780637f358439146102765780638da5cb5b146102a15761011f565b806317be85c3146101245780632a332b2a1461014f57806365fbc7f0146101785780636b69a5921461018f5780636e5b6b28146101ba575b600080fd5b34801561013057600080fd5b50610139610490565b604051610146919061143a565b60405180910390f35b34801561015b57600080fd5b5061017660048036038101906101719190611130565b61049a565b005b34801561018457600080fd5b5061018d6104de565b005b34801561019b57600080fd5b506101a46105ce565b6040516101b1919061143a565b60405180910390f35b3480156101c657600080fd5b506101e160048036038101906101dc919061119d565b6105da565b6040516101ee919061143a565b60405180910390f35b34801561020357600080fd5b5061020c610637565b005b34801561021a57600080fd5b506102356004803603810190610230919061119d565b6106bf565b6040516102429190611344565b60405180910390f35b34801561025757600080fd5b50610260610707565b60405161026d919061143a565b60405180910390f35b34801561028257600080fd5b5061028b61070d565b604051610298919061143a565b60405180910390f35b3480156102ad57600080fd5b506102b6610713565b6040516102c39190611344565b60405180910390f35b3480156102d857600080fd5b506102e161073c565b6040516102ee919061143a565b60405180910390f35b34801561030357600080fd5b5061030c610742565b604051610319919061135f565b60405180910390f35b34801561032e57600080fd5b506103496004803603810190610344919061119d565b61076c565b604051610356919061143a565b60405180910390f35b34801561036b57600080fd5b506103746107cd565b604051610381919061143a565b60405180910390f35b34801561039657600080fd5b506103b160048036038101906103ac9190611130565b6107d7565b6040516103be919061143a565b60405180910390f35b3480156103d357600080fd5b506103ee60048036038101906103e99190611130565b610820565b005b6103f8610864565b005b34801561040657600080fd5b50610421600480360381019061041c9190611130565b610b90565b005b61043d6004803603810190610438919061115d565b610c88565b60405161044a919061143a565b60405180910390f35b34801561045f57600080fd5b5061047a6004803603810190610475919061119d565b610ef0565b6040516104879190611344565b60405180910390f35b6000600554905090565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806105855750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6105c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bb906113ba565b60405180910390fd5b6000600581905550565b678ac7230489e8000081565b600080610608600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610f2d565b90506000670de0b6b3a764000084836106219190611775565b61062b91906114bc565b90508092505050919050565b61063f610fcd565b73ffffffffffffffffffffffffffffffffffffffff1661065d610713565b73ffffffffffffffffffffffffffffffffffffffff16146106b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106aa906113fa565b60405180910390fd5b6106bd6000610fd5565b565b6000600682815481106106d5576106d461193c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60055481565b60045481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000670de0b6b3a7640000826107829190611775565b915060006107b1600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610f2d565b905060006107c184836012611099565b90508092505050919050565b6000600354905090565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156108f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ea9061141a565b60405180910390fd5b678ac7230489e80000610905346105da565b1015610946576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093d9061139a565b60405180910390fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610a6b57600360008154809291906109aa90611895565b91905055506001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506006339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b3460046000828254610a7d9190611466565b9250508190555034600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ad39190611466565b925050819055503360096000600560008154610aee90611895565b919050819055815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f5d7b332009e5ea66f8cd6b2238038a62b1614c1a9df2ea82cb185ba7db1e047a34604051610b86919061143a565b60405180910390a2565b610b98610fcd565b73ffffffffffffffffffffffffffffffffffffffff16610bb6610713565b73ffffffffffffffffffffffffffffffffffffffff1614610c0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c03906113fa565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c739061137a565b60405180910390fd5b610c8581610fd5565b50565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610d315750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610d70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d67906113ba565b60405180910390fd5b81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610df2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de9906113da565b60405180910390fd5b81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e3d91906117cf565b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610ee6573d6000803e3d6000fd5b5081905092915050565b60006009600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610f7657600080fd5b505afa158015610f8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fae91906111ca565b5050509150506402540be40081610fc5919061165e565b915050919050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008282600a6110a99190611540565b856110b49190611775565b6110be91906114bc565b90509392505050565b6000813590506110d681611abf565b92915050565b6000815190506110eb81611ad6565b92915050565b60008135905061110081611aed565b92915050565b60008151905061111581611aed565b92915050565b60008151905061112a81611b04565b92915050565b6000602082840312156111465761114561196b565b5b6000611154848285016110c7565b91505092915050565b600080604083850312156111745761117361196b565b5b6000611182858286016110c7565b9250506020611193858286016110f1565b9150509250929050565b6000602082840312156111b3576111b261196b565b5b60006111c1848285016110f1565b91505092915050565b600080600080600060a086880312156111e6576111e561196b565b5b60006111f48882890161111b565b9550506020611205888289016110dc565b945050604061121688828901611106565b935050606061122788828901611106565b92505060806112388882890161111b565b9150509295509295909350565b61124e81611803565b82525050565b61125d8161185f565b82525050565b6000611270602683611455565b915061127b8261197d565b604082019050919050565b6000611293601b83611455565b915061129e826119cc565b602082019050919050565b60006112b6600d83611455565b91506112c1826119f5565b602082019050919050565b60006112d9602883611455565b91506112e482611a1e565b604082019050919050565b60006112fc602083611455565b915061130782611a6d565b602082019050919050565b600061131f601a83611455565b915061132a82611a96565b602082019050919050565b61133e8161183f565b82525050565b60006020820190506113596000830184611245565b92915050565b60006020820190506113746000830184611254565b92915050565b6000602082019050818103600083015261139381611263565b9050919050565b600060208201905081810360008301526113b381611286565b9050919050565b600060208201905081810360008301526113d3816112a9565b9050919050565b600060208201905081810360008301526113f3816112cc565b9050919050565b60006020820190508181036000830152611413816112ef565b9050919050565b6000602082019050818103600083015261143381611312565b9050919050565b600060208201905061144f6000830184611335565b92915050565b600082825260208201905092915050565b60006114718261183f565b915061147c8361183f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114b1576114b06118de565b5b828201905092915050565b60006114c78261183f565b91506114d28361183f565b9250826114e2576114e161190d565b5b828204905092915050565b6000808291508390505b600185111561153757808604811115611513576115126118de565b5b60018516156115225780820291505b808102905061153085611970565b94506114f7565b94509492505050565b600061154b8261183f565b91506115568361183f565b92506115837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461158b565b905092915050565b60008261159b5760019050611657565b816115a95760009050611657565b81600181146115bf57600281146115c9576115f8565b6001915050611657565b60ff8411156115db576115da6118de565b5b8360020a9150848211156115f2576115f16118de565b5b50611657565b5060208310610133831016604e8410600b841016171561162d5782820a905083811115611628576116276118de565b5b611657565b61163a84848460016114ed565b92509050818404811115611651576116506118de565b5b81810290505b9392505050565b600061166982611815565b915061167483611815565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156116b3576116b26118de565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156116f0576116ef6118de565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561172d5761172c6118de565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561176a576117696118de565b5b828202905092915050565b60006117808261183f565b915061178b8361183f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156117c4576117c36118de565b5b828202905092915050565b60006117da8261183f565b91506117e58361183f565b9250828210156117f8576117f76118de565b5b828203905092915050565b600061180e8261181f565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061186a82611871565b9050919050565b600061187c82611883565b9050919050565b600061188e8261181f565b9050919050565b60006118a08261183f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156118d3576118d26118de565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b7f4e6f7420746865206f776e657200000000000000000000000000000000000000600082015250565b7f43616e2774207769746864726177206d6f7265207468616e20646f6e6174656460008201527f20616d6f756e7421000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4f776e657220697320616c7265616479206120646f6e61746f72000000000000600082015250565b611ac881611803565b8114611ad357600080fd5b50565b611adf81611815565b8114611aea57600080fd5b50565b611af68161183f565b8114611b0157600080fd5b50565b611b0d81611849565b8114611b1857600080fd5b5056fea26469706673582212203375d941209c2d3b39595bca28843ca46844b0183722811aca8d7dc6ed7b7fb564736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061011f5760003560e01c806397732df5116100a0578063e30081a011610064578063e30081a0146103c7578063ed88c68e146103f0578063f2fde38b146103fa578063f3fef3a314610423578063faa381fb146104535761011f565b806397732df5146102cc5780639e87a5cd146102f7578063b65ce11c14610322578063bf1482fa1461035f578063c0f8cffc1461038a5761011f565b8063715018a6116100e7578063715018a6146101f75780637b66e17f1461020e5780637bdfd6d51461024b5780637f358439146102765780638da5cb5b146102a15761011f565b806317be85c3146101245780632a332b2a1461014f57806365fbc7f0146101785780636b69a5921461018f5780636e5b6b28146101ba575b600080fd5b34801561013057600080fd5b50610139610490565b604051610146919061143a565b60405180910390f35b34801561015b57600080fd5b5061017660048036038101906101719190611130565b61049a565b005b34801561018457600080fd5b5061018d6104de565b005b34801561019b57600080fd5b506101a46105ce565b6040516101b1919061143a565b60405180910390f35b3480156101c657600080fd5b506101e160048036038101906101dc919061119d565b6105da565b6040516101ee919061143a565b60405180910390f35b34801561020357600080fd5b5061020c610637565b005b34801561021a57600080fd5b506102356004803603810190610230919061119d565b6106bf565b6040516102429190611344565b60405180910390f35b34801561025757600080fd5b50610260610707565b60405161026d919061143a565b60405180910390f35b34801561028257600080fd5b5061028b61070d565b604051610298919061143a565b60405180910390f35b3480156102ad57600080fd5b506102b6610713565b6040516102c39190611344565b60405180910390f35b3480156102d857600080fd5b506102e161073c565b6040516102ee919061143a565b60405180910390f35b34801561030357600080fd5b5061030c610742565b604051610319919061135f565b60405180910390f35b34801561032e57600080fd5b506103496004803603810190610344919061119d565b61076c565b604051610356919061143a565b60405180910390f35b34801561036b57600080fd5b506103746107cd565b604051610381919061143a565b60405180910390f35b34801561039657600080fd5b506103b160048036038101906103ac9190611130565b6107d7565b6040516103be919061143a565b60405180910390f35b3480156103d357600080fd5b506103ee60048036038101906103e99190611130565b610820565b005b6103f8610864565b005b34801561040657600080fd5b50610421600480360381019061041c9190611130565b610b90565b005b61043d6004803603810190610438919061115d565b610c88565b60405161044a919061143a565b60405180910390f35b34801561045f57600080fd5b5061047a6004803603810190610475919061119d565b610ef0565b6040516104879190611344565b60405180910390f35b6000600554905090565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806105855750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6105c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bb906113ba565b60405180910390fd5b6000600581905550565b678ac7230489e8000081565b600080610608600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610f2d565b90506000670de0b6b3a764000084836106219190611775565b61062b91906114bc565b90508092505050919050565b61063f610fcd565b73ffffffffffffffffffffffffffffffffffffffff1661065d610713565b73ffffffffffffffffffffffffffffffffffffffff16146106b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106aa906113fa565b60405180910390fd5b6106bd6000610fd5565b565b6000600682815481106106d5576106d461193c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60055481565b60045481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000670de0b6b3a7640000826107829190611775565b915060006107b1600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610f2d565b905060006107c184836012611099565b90508092505050919050565b6000600354905090565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156108f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ea9061141a565b60405180910390fd5b678ac7230489e80000610905346105da565b1015610946576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093d9061139a565b60405180910390fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610a6b57600360008154809291906109aa90611895565b91905055506001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506006339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b3460046000828254610a7d9190611466565b9250508190555034600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ad39190611466565b925050819055503360096000600560008154610aee90611895565b919050819055815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f5d7b332009e5ea66f8cd6b2238038a62b1614c1a9df2ea82cb185ba7db1e047a34604051610b86919061143a565b60405180910390a2565b610b98610fcd565b73ffffffffffffffffffffffffffffffffffffffff16610bb6610713565b73ffffffffffffffffffffffffffffffffffffffff1614610c0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c03906113fa565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c739061137a565b60405180910390fd5b610c8581610fd5565b50565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610d315750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610d70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d67906113ba565b60405180910390fd5b81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610df2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de9906113da565b60405180910390fd5b81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e3d91906117cf565b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610ee6573d6000803e3d6000fd5b5081905092915050565b60006009600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610f7657600080fd5b505afa158015610f8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fae91906111ca565b5050509150506402540be40081610fc5919061165e565b915050919050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008282600a6110a99190611540565b856110b49190611775565b6110be91906114bc565b90509392505050565b6000813590506110d681611abf565b92915050565b6000815190506110eb81611ad6565b92915050565b60008135905061110081611aed565b92915050565b60008151905061111581611aed565b92915050565b60008151905061112a81611b04565b92915050565b6000602082840312156111465761114561196b565b5b6000611154848285016110c7565b91505092915050565b600080604083850312156111745761117361196b565b5b6000611182858286016110c7565b9250506020611193858286016110f1565b9150509250929050565b6000602082840312156111b3576111b261196b565b5b60006111c1848285016110f1565b91505092915050565b600080600080600060a086880312156111e6576111e561196b565b5b60006111f48882890161111b565b9550506020611205888289016110dc565b945050604061121688828901611106565b935050606061122788828901611106565b92505060806112388882890161111b565b9150509295509295909350565b61124e81611803565b82525050565b61125d8161185f565b82525050565b6000611270602683611455565b915061127b8261197d565b604082019050919050565b6000611293601b83611455565b915061129e826119cc565b602082019050919050565b60006112b6600d83611455565b91506112c1826119f5565b602082019050919050565b60006112d9602883611455565b91506112e482611a1e565b604082019050919050565b60006112fc602083611455565b915061130782611a6d565b602082019050919050565b600061131f601a83611455565b915061132a82611a96565b602082019050919050565b61133e8161183f565b82525050565b60006020820190506113596000830184611245565b92915050565b60006020820190506113746000830184611254565b92915050565b6000602082019050818103600083015261139381611263565b9050919050565b600060208201905081810360008301526113b381611286565b9050919050565b600060208201905081810360008301526113d3816112a9565b9050919050565b600060208201905081810360008301526113f3816112cc565b9050919050565b60006020820190508181036000830152611413816112ef565b9050919050565b6000602082019050818103600083015261143381611312565b9050919050565b600060208201905061144f6000830184611335565b92915050565b600082825260208201905092915050565b60006114718261183f565b915061147c8361183f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114b1576114b06118de565b5b828201905092915050565b60006114c78261183f565b91506114d28361183f565b9250826114e2576114e161190d565b5b828204905092915050565b6000808291508390505b600185111561153757808604811115611513576115126118de565b5b60018516156115225780820291505b808102905061153085611970565b94506114f7565b94509492505050565b600061154b8261183f565b91506115568361183f565b92506115837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461158b565b905092915050565b60008261159b5760019050611657565b816115a95760009050611657565b81600181146115bf57600281146115c9576115f8565b6001915050611657565b60ff8411156115db576115da6118de565b5b8360020a9150848211156115f2576115f16118de565b5b50611657565b5060208310610133831016604e8410600b841016171561162d5782820a905083811115611628576116276118de565b5b611657565b61163a84848460016114ed565b92509050818404811115611651576116506118de565b5b81810290505b9392505050565b600061166982611815565b915061167483611815565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156116b3576116b26118de565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156116f0576116ef6118de565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561172d5761172c6118de565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561176a576117696118de565b5b828202905092915050565b60006117808261183f565b915061178b8361183f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156117c4576117c36118de565b5b828202905092915050565b60006117da8261183f565b91506117e58361183f565b9250828210156117f8576117f76118de565b5b828203905092915050565b600061180e8261181f565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061186a82611871565b9050919050565b600061187c82611883565b9050919050565b600061188e8261181f565b9050919050565b60006118a08261183f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156118d3576118d26118de565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b7f4e6f7420746865206f776e657200000000000000000000000000000000000000600082015250565b7f43616e2774207769746864726177206d6f7265207468616e20646f6e6174656460008201527f20616d6f756e7421000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4f776e657220697320616c7265616479206120646f6e61746f72000000000000600082015250565b611ac881611803565b8114611ad357600080fd5b50565b611adf81611815565b8114611aea57600080fd5b50565b611af68161183f565b8114611b0157600080fd5b50565b611b0d81611849565b8114611b1857600080fd5b5056fea26469706673582212203375d941209c2d3b39595bca28843ca46844b0183722811aca8d7dc6ed7b7fb564736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 219,
        "contract": "contracts/Donate.sol:Donate",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 810,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_pickMe",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 812,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_dlottery",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 814,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_totalDonators",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 816,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_totalDonations",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 818,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_entries",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 821,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_donators",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 825,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_addressToRegistered",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 829,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_addressToAmount",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 833,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_idToAddress",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 836,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(AggregatorV3Interface)103"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)103": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}