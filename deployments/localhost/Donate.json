{
  "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "donor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DonationAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "latitude",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "longitude",
          "type": "string"
        }
      ],
      "name": "DonatorRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        }
      ],
      "name": "getAddressToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ethAmount",
          "type": "uint256"
        }
      ],
      "name": "getConversionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getDonator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntries",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getIdToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_usdAmount",
          "type": "uint256"
        }
      ],
      "name": "getUsdAmountInEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetEntries",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_entries",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_totalDonations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_totalDonators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addressDonate",
          "type": "address"
        }
      ],
      "name": "setAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addressDonate",
          "type": "address"
        }
      ],
      "name": "setLotteryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x82c535980f0aa9f237363925d3a57d321e81e82cb0a311e8c40576577c2cdbe1",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "transactionIndex": 0,
    "gasUsed": "1605038",
    "logsBloom": "0x
    "blockHash": "0x0b3b021508e3bbaa68ab4711b18c52a7c1b63a7c1557c3e3f86913a9e97f4f99",
    "transactionHash": "0x82c535980f0aa9f237363925d3a57d321e81e82cb0a311e8c40576577c2cdbe1",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 3,
        "transactionHash": "0x82c535980f0aa9f237363925d3a57d321e81e82cb0a311e8c40576577c2cdbe1",
        "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x0b3b021508e3bbaa68ab4711b18c52a7c1b63a7c1557c3e3f86913a9e97f4f99"
      }
    ],
    "blockNumber": 3,
    "cumulativeGasUsed": "1605038",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "8b45ac078e8748965f3c5162263738ca",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DonationAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"latitude\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"longitude\",\"type\":\"string\"}],\"name\":\"DonatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"}],\"name\":\"getAddressToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ethAmount\",\"type\":\"uint256\"}],\"name\":\"getConversionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getDonator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntries\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getIdToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_usdAmount\",\"type\":\"uint256\"}],\"name\":\"getUsdAmountInEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetEntries\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_entries\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalDonations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalDonators\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressDonate\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressDonate\",\"type\":\"address\"}],\"name\":\"setLotteryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Donate.sol\":\"Donate\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Donate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ninterface IDonate {\\n    function getUsdAmountInEth(uint256 _usdAmount) external view returns (uint256);\\n    function getDonator(uint256 _index) external view returns (address); \\n    function getAddressToAmount(address _donator) external view returns (uint256);\\n    function getIdToAddress(uint256 id) external view returns (address);\\n    function withdraw(address _donator, uint256 _amount) external payable returns(uint256);\\n    function getEntries() external view returns (uint256);\\n    function resetEntries() external;\\n}\\n\\ncontract Donate is Ownable {\\n    uint256 public constant MINIMUM_USD = 10 * 10**18;\\n    address payable private immutable i_owner;\\n    address private s_pickMe;\\n    address private s_dlottery;\\n    uint256 public s_totalDonators;\\n    uint256 public s_totalDonations;\\n    uint256 public s_entries;\\n    address[] private s_donators;\\n    mapping(address => bool) private s_addressToRegistered;\\n    mapping(address => uint256) private s_addressToAmount;\\n    mapping(uint256 => address) private s_idToAddress;\\n    AggregatorV3Interface private s_priceFeed;\\n    event DonatorRegistered(uint256 amount, string name, string latitude, string longitude);\\n    event DonationAccepted(address indexed donor, uint256 amount);\\n\\n    constructor(address _priceFeed) {\\n        s_priceFeed = AggregatorV3Interface(_priceFeed);\\n        i_owner = payable(msg.sender);\\n        s_totalDonators = 0;\\n        s_totalDonations = 0;\\n        s_entries = 0;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function getPrice(AggregatorV3Interface _priceFeed) internal view returns (uint256) {\\n        (, int256 answer, , , ) = _priceFeed.latestRoundData();\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    function getConversionRate(uint256 _ethAmount) public view returns (uint256) {\\n        uint256 ethPrice = getPrice(s_priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * _ethAmount) / 1000000000000000000;\\n        return ethAmountInUsd;\\n    }\\n\\n    function divider(uint numerator, uint denominator, uint precision) internal pure returns(uint) {\\n        return numerator*(uint(10)**uint(precision))/denominator;\\n    }\\n\\n    function getUsdAmountInEth(uint256 _usdAmount) external view returns (uint256) {\\n        _usdAmount = _usdAmount * (10 ** 18);\\n        uint256 ethPrice = getPrice(s_priceFeed);\\n        uint256 usdAmountInEth = divider(_usdAmount, ethPrice, 18);\\n        return usdAmountInEth;\\n    }\\n\\n    function donate() public payable {\\n        require(msg.sender != i_owner, \\\"Owner is already a donator\\\");\\n        require(getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        if (!s_addressToRegistered[msg.sender]) {\\n            s_totalDonators++;\\n            s_addressToRegistered[msg.sender] = true;\\n            s_donators.push(msg.sender);\\n        }\\n        s_totalDonations += msg.value;\\n        s_addressToAmount[msg.sender] += msg.value;\\n        s_idToAddress[++s_entries] = msg.sender;\\n        emit DonationAccepted(msg.sender, msg.value);\\n    }\\n\\n    function withdraw(address _donator, uint256 _amount) external payable returns(uint256) {\\n        require(msg.sender == i_owner || msg.sender == s_pickMe, \\\"Not the owner\\\");\\n        require(s_addressToAmount[_donator] >= _amount, \\\"Can't withdraw more than donated amount!\\\");\\n        s_addressToAmount[_donator] = s_addressToAmount[_donator] - _amount;\\n        payable(i_owner).transfer(_amount);\\n        return _amount;\\n    }\\n\\n    /* getter functions */\\n\\n    function getDonator(uint256 _index) external view returns (address) {\\n        return s_donators[_index];\\n    }\\n\\n    function getAddressToAmount(address _donator) external view returns (uint256) {\\n        return s_addressToAmount[_donator];\\n    }\\n\\n    function getIdToAddress(uint256 id) external view returns (address) {\\n        return s_idToAddress[id];\\n    }\\n\\n    function getEntries() external view returns (uint256) {\\n        return s_entries;\\n    }\\n\\n    /* setter functions */\\n\\n     function setAddress(address _addressDonate) external { \\n        s_pickMe = _addressDonate;\\n    }\\n\\n    function setLotteryAddress(address _addressDonate) external { \\n        s_dlottery = _addressDonate;\\n    }\\n\\n    function resetEntries() external {\\n        require(msg.sender == i_owner || msg.sender == s_dlottery, \\\"Not the owner\\\");\\n        s_entries = 0;\\n    }\\n\\n}\",\"keccak256\":\"0xeca259328eb45ed09373d3311c32d9d3688f4bbb5d00302cc252df827c0cb2ff\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162001d9b38038062001d9b8339818101604052810190620000379190620001d1565b620000576200004b620000ee60201b60201c565b620000f660201b60201c565b80600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250506000600381905550600060048190555060006005819055505062000256565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001cb816200023c565b92915050565b600060208284031215620001ea57620001e962000237565b5b6000620001fa84828501620001ba565b91505092915050565b6000620002108262000217565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620002478162000203565b81146200025357600080fd5b50565b60805160601c611b116200028a600039600081816104aa0152818161082601528181610c4c0152610e420152611b116000f3fe6080604052600436106101145760003560e01c80638da5cb5b116100a0578063e30081a011610064578063e30081a014610391578063ed88c68e146103ba578063f2fde38b146103c4578063f3fef3a3146103ed578063faa381fb1461041d57610114565b80638da5cb5b1461029657806397732df5146102c15780639e87a5cd146102ec578063b65ce11c14610317578063c0f8cffc1461035457610114565b80636e5b6b28116100e75780636e5b6b28146101af578063715018a6146101ec5780637b66e17f146102035780637bdfd6d5146102405780637f3584391461026b57610114565b806317be85c3146101195780632a332b2a1461014457806365fbc7f01461016d5780636b69a59214610184575b600080fd5b34801561012557600080fd5b5061012e61045a565b60405161013b91906113fa565b60405180910390f35b34801561015057600080fd5b5061016b600480360381019061016691906110f0565b610464565b005b34801561017957600080fd5b506101826104a8565b005b34801561019057600080fd5b50610199610598565b6040516101a691906113fa565b60405180910390f35b3480156101bb57600080fd5b506101d660048036038101906101d1919061115d565b6105a4565b6040516101e391906113fa565b60405180910390f35b3480156101f857600080fd5b50610201610601565b005b34801561020f57600080fd5b5061022a6004803603810190610225919061115d565b610689565b6040516102379190611304565b60405180910390f35b34801561024c57600080fd5b506102556106d1565b60405161026291906113fa565b60405180910390f35b34801561027757600080fd5b506102806106d7565b60405161028d91906113fa565b60405180910390f35b3480156102a257600080fd5b506102ab6106dd565b6040516102b89190611304565b60405180910390f35b3480156102cd57600080fd5b506102d6610706565b6040516102e391906113fa565b60405180910390f35b3480156102f857600080fd5b5061030161070c565b60405161030e919061131f565b60405180910390f35b34801561032357600080fd5b5061033e6004803603810190610339919061115d565b610736565b60405161034b91906113fa565b60405180910390f35b34801561036057600080fd5b5061037b600480360381019061037691906110f0565b610797565b60405161038891906113fa565b60405180910390f35b34801561039d57600080fd5b506103b860048036038101906103b391906110f0565b6107e0565b005b6103c2610824565b005b3480156103d057600080fd5b506103eb60048036038101906103e691906110f0565b610b50565b005b6104076004803603810190610402919061111d565b610c48565b60405161041491906113fa565b60405180910390f35b34801561042957600080fd5b50610444600480360381019061043f919061115d565b610eb0565b6040516104519190611304565b60405180910390f35b6000600554905090565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061054f5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61058e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105859061137a565b60405180910390fd5b6000600581905550565b678ac7230489e8000081565b6000806105d2600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610eed565b90506000670de0b6b3a764000084836105eb9190611735565b6105f5919061147c565b90508092505050919050565b610609610f8d565b73ffffffffffffffffffffffffffffffffffffffff166106276106dd565b73ffffffffffffffffffffffffffffffffffffffff161461067d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610674906113ba565b60405180910390fd5b6106876000610f95565b565b60006006828154811061069f5761069e6118fc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60055481565b60045481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000670de0b6b3a76400008261074c9190611735565b9150600061077b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610eed565b9050600061078b84836012611059565b90508092505050919050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156108b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108aa906113da565b60405180910390fd5b678ac7230489e800006108c5346105a4565b1015610906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd9061135a565b60405180910390fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610a2b576003600081548092919061096a90611855565b91905055506001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506006339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b3460046000828254610a3d9190611426565b9250508190555034600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a939190611426565b925050819055503360096000600560008154610aae90611855565b919050819055815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f5d7b332009e5ea66f8cd6b2238038a62b1614c1a9df2ea82cb185ba7db1e047a34604051610b4691906113fa565b60405180910390a2565b610b58610f8d565b73ffffffffffffffffffffffffffffffffffffffff16610b766106dd565b73ffffffffffffffffffffffffffffffffffffffff1614610bcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc3906113ba565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c339061133a565b60405180910390fd5b610c4581610f95565b50565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610cf15750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610d30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d279061137a565b60405180910390fd5b81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610db2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da99061139a565b60405180910390fd5b81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610dfd919061178f565b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610ea6573d6000803e3d6000fd5b5081905092915050565b60006009600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610f3657600080fd5b505afa158015610f4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6e919061118a565b5050509150506402540be40081610f85919061161e565b915050919050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008282600a6110699190611500565b856110749190611735565b61107e919061147c565b90509392505050565b60008135905061109681611a7f565b92915050565b6000815190506110ab81611a96565b92915050565b6000813590506110c081611aad565b92915050565b6000815190506110d581611aad565b92915050565b6000815190506110ea81611ac4565b92915050565b6000602082840312156111065761110561192b565b5b600061111484828501611087565b91505092915050565b600080604083850312156111345761113361192b565b5b600061114285828601611087565b9250506020611153858286016110b1565b9150509250929050565b6000602082840312156111735761117261192b565b5b6000611181848285016110b1565b91505092915050565b600080600080600060a086880312156111a6576111a561192b565b5b60006111b4888289016110db565b95505060206111c58882890161109c565b94505060406111d6888289016110c6565b93505060606111e7888289016110c6565b92505060806111f8888289016110db565b9150509295509295909350565b61120e816117c3565b82525050565b61121d8161181f565b82525050565b6000611230602683611415565b915061123b8261193d565b604082019050919050565b6000611253601b83611415565b915061125e8261198c565b602082019050919050565b6000611276600d83611415565b9150611281826119b5565b602082019050919050565b6000611299602883611415565b91506112a4826119de565b604082019050919050565b60006112bc602083611415565b91506112c782611a2d565b602082019050919050565b60006112df601a83611415565b91506112ea82611a56565b602082019050919050565b6112fe816117ff565b82525050565b60006020820190506113196000830184611205565b92915050565b60006020820190506113346000830184611214565b92915050565b6000602082019050818103600083015261135381611223565b9050919050565b6000602082019050818103600083015261137381611246565b9050919050565b6000602082019050818103600083015261139381611269565b9050919050565b600060208201905081810360008301526113b38161128c565b9050919050565b600060208201905081810360008301526113d3816112af565b9050919050565b600060208201905081810360008301526113f3816112d2565b9050919050565b600060208201905061140f60008301846112f5565b92915050565b600082825260208201905092915050565b6000611431826117ff565b915061143c836117ff565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114715761147061189e565b5b828201905092915050565b6000611487826117ff565b9150611492836117ff565b9250826114a2576114a16118cd565b5b828204905092915050565b6000808291508390505b60018511156114f7578086048111156114d3576114d261189e565b5b60018516156114e25780820291505b80810290506114f085611930565b94506114b7565b94509492505050565b600061150b826117ff565b9150611516836117ff565b92506115437fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461154b565b905092915050565b60008261155b5760019050611617565b816115695760009050611617565b816001811461157f5760028114611589576115b8565b6001915050611617565b60ff84111561159b5761159a61189e565b5b8360020a9150848211156115b2576115b161189e565b5b50611617565b5060208310610133831016604e8410600b84101617156115ed5782820a9050838111156115e8576115e761189e565b5b611617565b6115fa84848460016114ad565b925090508184048111156116115761161061189e565b5b81810290505b9392505050565b6000611629826117d5565b9150611634836117d5565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156116735761167261189e565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156116b0576116af61189e565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156116ed576116ec61189e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561172a5761172961189e565b5b828202905092915050565b6000611740826117ff565b915061174b836117ff565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156117845761178361189e565b5b828202905092915050565b600061179a826117ff565b91506117a5836117ff565b9250828210156117b8576117b761189e565b5b828203905092915050565b60006117ce826117df565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061182a82611831565b9050919050565b600061183c82611843565b9050919050565b600061184e826117df565b9050919050565b6000611860826117ff565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156118935761189261189e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b7f4e6f7420746865206f776e657200000000000000000000000000000000000000600082015250565b7f43616e2774207769746864726177206d6f7265207468616e20646f6e6174656460008201527f20616d6f756e7421000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4f776e657220697320616c7265616479206120646f6e61746f72000000000000600082015250565b611a88816117c3565b8114611a9357600080fd5b50565b611a9f816117d5565b8114611aaa57600080fd5b50565b611ab6816117ff565b8114611ac157600080fd5b50565b611acd81611809565b8114611ad857600080fd5b5056fea2646970667358221220a4cc99cfd2f90f7d1cb1df781c35095379a21e08f7c0e7da9451016e43772aac64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106101145760003560e01c80638da5cb5b116100a0578063e30081a011610064578063e30081a014610391578063ed88c68e146103ba578063f2fde38b146103c4578063f3fef3a3146103ed578063faa381fb1461041d57610114565b80638da5cb5b1461029657806397732df5146102c15780639e87a5cd146102ec578063b65ce11c14610317578063c0f8cffc1461035457610114565b80636e5b6b28116100e75780636e5b6b28146101af578063715018a6146101ec5780637b66e17f146102035780637bdfd6d5146102405780637f3584391461026b57610114565b806317be85c3146101195780632a332b2a1461014457806365fbc7f01461016d5780636b69a59214610184575b600080fd5b34801561012557600080fd5b5061012e61045a565b60405161013b91906113fa565b60405180910390f35b34801561015057600080fd5b5061016b600480360381019061016691906110f0565b610464565b005b34801561017957600080fd5b506101826104a8565b005b34801561019057600080fd5b50610199610598565b6040516101a691906113fa565b60405180910390f35b3480156101bb57600080fd5b506101d660048036038101906101d1919061115d565b6105a4565b6040516101e391906113fa565b60405180910390f35b3480156101f857600080fd5b50610201610601565b005b34801561020f57600080fd5b5061022a6004803603810190610225919061115d565b610689565b6040516102379190611304565b60405180910390f35b34801561024c57600080fd5b506102556106d1565b60405161026291906113fa565b60405180910390f35b34801561027757600080fd5b506102806106d7565b60405161028d91906113fa565b60405180910390f35b3480156102a257600080fd5b506102ab6106dd565b6040516102b89190611304565b60405180910390f35b3480156102cd57600080fd5b506102d6610706565b6040516102e391906113fa565b60405180910390f35b3480156102f857600080fd5b5061030161070c565b60405161030e919061131f565b60405180910390f35b34801561032357600080fd5b5061033e6004803603810190610339919061115d565b610736565b60405161034b91906113fa565b60405180910390f35b34801561036057600080fd5b5061037b600480360381019061037691906110f0565b610797565b60405161038891906113fa565b60405180910390f35b34801561039d57600080fd5b506103b860048036038101906103b391906110f0565b6107e0565b005b6103c2610824565b005b3480156103d057600080fd5b506103eb60048036038101906103e691906110f0565b610b50565b005b6104076004803603810190610402919061111d565b610c48565b60405161041491906113fa565b60405180910390f35b34801561042957600080fd5b50610444600480360381019061043f919061115d565b610eb0565b6040516104519190611304565b60405180910390f35b6000600554905090565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061054f5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61058e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105859061137a565b60405180910390fd5b6000600581905550565b678ac7230489e8000081565b6000806105d2600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610eed565b90506000670de0b6b3a764000084836105eb9190611735565b6105f5919061147c565b90508092505050919050565b610609610f8d565b73ffffffffffffffffffffffffffffffffffffffff166106276106dd565b73ffffffffffffffffffffffffffffffffffffffff161461067d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610674906113ba565b60405180910390fd5b6106876000610f95565b565b60006006828154811061069f5761069e6118fc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60055481565b60045481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000670de0b6b3a76400008261074c9190611735565b9150600061077b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610eed565b9050600061078b84836012611059565b90508092505050919050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156108b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108aa906113da565b60405180910390fd5b678ac7230489e800006108c5346105a4565b1015610906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd9061135a565b60405180910390fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610a2b576003600081548092919061096a90611855565b91905055506001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506006339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b3460046000828254610a3d9190611426565b9250508190555034600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a939190611426565b925050819055503360096000600560008154610aae90611855565b919050819055815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f5d7b332009e5ea66f8cd6b2238038a62b1614c1a9df2ea82cb185ba7db1e047a34604051610b4691906113fa565b60405180910390a2565b610b58610f8d565b73ffffffffffffffffffffffffffffffffffffffff16610b766106dd565b73ffffffffffffffffffffffffffffffffffffffff1614610bcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc3906113ba565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c339061133a565b60405180910390fd5b610c4581610f95565b50565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610cf15750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610d30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d279061137a565b60405180910390fd5b81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610db2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da99061139a565b60405180910390fd5b81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610dfd919061178f565b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610ea6573d6000803e3d6000fd5b5081905092915050565b60006009600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610f3657600080fd5b505afa158015610f4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6e919061118a565b5050509150506402540be40081610f85919061161e565b915050919050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008282600a6110699190611500565b856110749190611735565b61107e919061147c565b90509392505050565b60008135905061109681611a7f565b92915050565b6000815190506110ab81611a96565b92915050565b6000813590506110c081611aad565b92915050565b6000815190506110d581611aad565b92915050565b6000815190506110ea81611ac4565b92915050565b6000602082840312156111065761110561192b565b5b600061111484828501611087565b91505092915050565b600080604083850312156111345761113361192b565b5b600061114285828601611087565b9250506020611153858286016110b1565b9150509250929050565b6000602082840312156111735761117261192b565b5b6000611181848285016110b1565b91505092915050565b600080600080600060a086880312156111a6576111a561192b565b5b60006111b4888289016110db565b95505060206111c58882890161109c565b94505060406111d6888289016110c6565b93505060606111e7888289016110c6565b92505060806111f8888289016110db565b9150509295509295909350565b61120e816117c3565b82525050565b61121d8161181f565b82525050565b6000611230602683611415565b915061123b8261193d565b604082019050919050565b6000611253601b83611415565b915061125e8261198c565b602082019050919050565b6000611276600d83611415565b9150611281826119b5565b602082019050919050565b6000611299602883611415565b91506112a4826119de565b604082019050919050565b60006112bc602083611415565b91506112c782611a2d565b602082019050919050565b60006112df601a83611415565b91506112ea82611a56565b602082019050919050565b6112fe816117ff565b82525050565b60006020820190506113196000830184611205565b92915050565b60006020820190506113346000830184611214565b92915050565b6000602082019050818103600083015261135381611223565b9050919050565b6000602082019050818103600083015261137381611246565b9050919050565b6000602082019050818103600083015261139381611269565b9050919050565b600060208201905081810360008301526113b38161128c565b9050919050565b600060208201905081810360008301526113d3816112af565b9050919050565b600060208201905081810360008301526113f3816112d2565b9050919050565b600060208201905061140f60008301846112f5565b92915050565b600082825260208201905092915050565b6000611431826117ff565b915061143c836117ff565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114715761147061189e565b5b828201905092915050565b6000611487826117ff565b9150611492836117ff565b9250826114a2576114a16118cd565b5b828204905092915050565b6000808291508390505b60018511156114f7578086048111156114d3576114d261189e565b5b60018516156114e25780820291505b80810290506114f085611930565b94506114b7565b94509492505050565b600061150b826117ff565b9150611516836117ff565b92506115437fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461154b565b905092915050565b60008261155b5760019050611617565b816115695760009050611617565b816001811461157f5760028114611589576115b8565b6001915050611617565b60ff84111561159b5761159a61189e565b5b8360020a9150848211156115b2576115b161189e565b5b50611617565b5060208310610133831016604e8410600b84101617156115ed5782820a9050838111156115e8576115e761189e565b5b611617565b6115fa84848460016114ad565b925090508184048111156116115761161061189e565b5b81810290505b9392505050565b6000611629826117d5565b9150611634836117d5565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156116735761167261189e565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156116b0576116af61189e565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156116ed576116ec61189e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561172a5761172961189e565b5b828202905092915050565b6000611740826117ff565b915061174b836117ff565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156117845761178361189e565b5b828202905092915050565b600061179a826117ff565b91506117a5836117ff565b9250828210156117b8576117b761189e565b5b828203905092915050565b60006117ce826117df565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061182a82611831565b9050919050565b600061183c82611843565b9050919050565b600061184e826117df565b9050919050565b6000611860826117ff565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156118935761189261189e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b7f4e6f7420746865206f776e657200000000000000000000000000000000000000600082015250565b7f43616e2774207769746864726177206d6f7265207468616e20646f6e6174656460008201527f20616d6f756e7421000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4f776e657220697320616c7265616479206120646f6e61746f72000000000000600082015250565b611a88816117c3565b8114611a9357600080fd5b50565b611a9f816117d5565b8114611aaa57600080fd5b50565b611ab6816117ff565b8114611ac157600080fd5b50565b611acd81611809565b8114611ad857600080fd5b5056fea2646970667358221220a4cc99cfd2f90f7d1cb1df781c35095379a21e08f7c0e7da9451016e43772aac64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 893,
        "contract": "contracts/Donate.sol:Donate",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1484,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_pickMe",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1486,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_dlottery",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 1488,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_totalDonators",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1490,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_totalDonations",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1492,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_entries",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1495,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_donators",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 1499,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_addressToRegistered",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1503,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_addressToAmount",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1507,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_idToAddress",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 1510,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(AggregatorV3Interface)103"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)103": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}