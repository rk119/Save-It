{
  "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "donor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DonationAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "latitude",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "longitude",
          "type": "string"
        }
      ],
      "name": "DonatorRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        }
      ],
      "name": "getAddressToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        }
      ],
      "name": "getAddressToDonatorData",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ethAmount",
          "type": "uint256"
        }
      ],
      "name": "getConversionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getDonator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntries",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getIdToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_usdAmount",
          "type": "uint256"
        }
      ],
      "name": "getUsdAmountInEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_latitude",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_longitude",
          "type": "string"
        }
      ],
      "name": "registerDonator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetEntries",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_entries",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_totalDonations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_totalDonators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addressDonate",
          "type": "address"
        }
      ],
      "name": "setAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addressDonate",
          "type": "address"
        }
      ],
      "name": "setLotteryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x222636e1be19c9dec80ff94576b79df5c35c3850c60eda32549d59bf1aaf4bbc",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "transactionIndex": 0,
    "gasUsed": "2286652",
    "logsBloom": "0x
    "blockHash": "0x901f80f46823170c24c65afc1adbf828bba705a2be5f94b4b85306655fe27a5a",
    "transactionHash": "0x222636e1be19c9dec80ff94576b79df5c35c3850c60eda32549d59bf1aaf4bbc",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 3,
        "transactionHash": "0x222636e1be19c9dec80ff94576b79df5c35c3850c60eda32549d59bf1aaf4bbc",
        "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x901f80f46823170c24c65afc1adbf828bba705a2be5f94b4b85306655fe27a5a"
      }
    ],
    "blockNumber": 3,
    "cumulativeGasUsed": "2286652",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "9e85c4fe3e0fdc92ee43a86fa8584718",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DonationAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"latitude\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"longitude\",\"type\":\"string\"}],\"name\":\"DonatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"}],\"name\":\"getAddressToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"}],\"name\":\"getAddressToDonatorData\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ethAmount\",\"type\":\"uint256\"}],\"name\":\"getConversionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getDonator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntries\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getIdToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_usdAmount\",\"type\":\"uint256\"}],\"name\":\"getUsdAmountInEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_latitude\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_longitude\",\"type\":\"string\"}],\"name\":\"registerDonator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetEntries\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_entries\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalDonations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalDonators\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressDonate\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressDonate\",\"type\":\"address\"}],\"name\":\"setLotteryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Donate.sol\":\"Donate\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Donate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ninterface IDonate {\\n    function getUsdAmountInEth(uint256 _usdAmount) external view returns (uint256);\\n    function getDonator(uint256 _index) external view returns (address); \\n    function getAddressToAmount(address _donator) external view returns (uint256);\\n    function getAddressToDonatorData(address _donator) external view returns (string memory, string memory, string memory);\\n    function getIdToAddress(uint256 id) external view returns (address);\\n    function withdraw(address _donator, uint256 _amount) external payable returns(uint256);\\n    function getEntries() external view returns (uint256);\\n    function resetEntries() external;\\n}\\n\\ncontract Donate is Ownable {\\n\\n    struct DonatorData {\\n        uint256 amount;\\n        string name;\\n        string latitude;\\n        string longitude;\\n    }\\n    uint256 public constant MINIMUM_USD = 10 * 10**18;\\n    address payable private immutable i_owner;\\n    address private s_pickMe;\\n    address private s_dlottery;\\n    uint256 public s_totalDonators;\\n    uint256 public s_totalDonations;\\n    uint256 public s_entries;\\n    address[] private s_donators;\\n    mapping(address => bool) private s_addressToRegistered;\\n    mapping(address => DonatorData) private s_addressToDonatorData;\\n    mapping(uint256 => address) private s_idToAddress;\\n    AggregatorV3Interface private s_priceFeed;\\n    event DonatorRegistered(uint256 amount, string name, string latitude, string longitude);\\n    event DonationAccepted(address indexed donor, uint256 amount);\\n\\n    constructor(address _priceFeed) {\\n        s_priceFeed = AggregatorV3Interface(_priceFeed);\\n        i_owner = payable(msg.sender);\\n        s_totalDonators = 0;\\n        s_totalDonations = 0;\\n        s_entries = 0;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function getPrice(AggregatorV3Interface _priceFeed) internal view returns (uint256) {\\n        (, int256 answer, , , ) = _priceFeed.latestRoundData();\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    function getConversionRate(uint256 _ethAmount) public view returns (uint256) {\\n        uint256 ethPrice = getPrice(s_priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * _ethAmount) / 1000000000000000000;\\n        return ethAmountInUsd;\\n    }\\n\\n    function divider(uint numerator, uint denominator, uint precision) internal pure returns(uint) {\\n        return numerator*(uint(10)**uint(precision))/denominator;\\n    }\\n\\n    function getUsdAmountInEth(uint256 _usdAmount) external view returns (uint256) {\\n        _usdAmount = _usdAmount * (10 ** 18);\\n        uint256 ethPrice = getPrice(s_priceFeed);\\n        uint256 usdAmountInEth = divider(_usdAmount, ethPrice, 18);\\n        return usdAmountInEth;\\n    }\\n\\n    function registerDonator(string memory _name, string memory _latitude, string memory _longitude) public {\\n        require(msg.sender != i_owner, \\\"Owner cannot register as donator\\\");\\n        require(!s_addressToRegistered[msg.sender], \\\"Already registered\\\");\\n        require(bytes(_name).length > 0, \\\"Invalid. Name cannot be empty\\\");\\n        require(bytes(_longitude).length > 0, \\\"Invalid. Longitude cannot be empty\\\");\\n        require(bytes(_latitude).length > 0, \\\"Invalid. Latitude cannot be empty\\\");\\n        s_totalDonators++;\\n        s_addressToRegistered[msg.sender] = true;\\n        DonatorData memory data = DonatorData(0, _name, _latitude, _longitude);\\n        s_addressToDonatorData[msg.sender] = data;\\n        s_donators.push(msg.sender);\\n        emit DonatorRegistered(0, _name, _latitude, _longitude);\\n    }\\n\\n    function donate() public payable {\\n        require(msg.sender != i_owner, \\\"Owner is already a donator\\\");\\n        require(s_addressToRegistered[msg.sender], \\\"You need to register first!\\\");\\n        require(getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_totalDonations += msg.value;\\n        s_addressToDonatorData[msg.sender].amount += msg.value;\\n        s_idToAddress[++s_entries] = msg.sender;\\n        emit DonationAccepted(msg.sender, msg.value);\\n    }\\n\\n    function withdraw(address _donator, uint256 _amount) external payable returns(uint256) {\\n        require(msg.sender == i_owner || msg.sender == s_pickMe, \\\"Not the owner\\\");\\n        require(s_addressToDonatorData[_donator].amount >= _amount, \\\"Can't withdraw more than donated amount!\\\");\\n        s_addressToDonatorData[_donator].amount = s_addressToDonatorData[_donator].amount - _amount;\\n        payable(i_owner).transfer(_amount);\\n        return _amount;\\n    }\\n\\n    /* getter functions */\\n\\n    function getDonator(uint256 _index) external view returns (address) {\\n        return s_donators[_index];\\n    }\\n\\n    function getAddressToAmount(address _donator) external view returns (uint256) {\\n        return s_addressToDonatorData[_donator].amount;\\n    }\\n\\n    function getAddressToDonatorData(address _donator) external view returns (string memory, string memory, string memory) {\\n        return (s_addressToDonatorData[_donator].name, s_addressToDonatorData[_donator].latitude, s_addressToDonatorData[_donator].longitude);\\n    }\\n\\n    function getIdToAddress(uint256 id) external view returns (address) {\\n        return s_idToAddress[id];\\n    }\\n\\n    function getEntries() external view returns (uint256) {\\n        return s_entries;\\n    }\\n\\n    /* setter functions */\\n\\n     function setAddress(address _addressDonate) external { \\n        s_pickMe = _addressDonate;\\n    }\\n\\n    function setLotteryAddress(address _addressDonate) external { \\n        s_dlottery = _addressDonate;\\n    }\\n\\n    function resetEntries() external {\\n        s_entries = 0;\\n    }\\n\\n}\",\"keccak256\":\"0xddaeb2f4dd6788abe669688bd8e2008bc1e145f3d3a2f17e33a329baa66482aa\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162002a0038038062002a008339818101604052810190620000379190620001d1565b620000576200004b620000ee60201b60201c565b620000f660201b60201c565b80600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250506000600381905550600060048190555060006005819055505062000256565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001cb816200023c565b92915050565b600060208284031215620001ea57620001e962000237565b5b6000620001fa84828501620001ba565b91505092915050565b6000620002108262000217565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620002478162000203565b81146200025357600080fd5b50565b60805160601c6127766200028a600039600081816109f901528181610e0601528181611196015261139501526127766000f3fe60806040526004361061012a5760003560e01c806397732df5116100ab578063cf3c06bb1161006f578063cf3c06bb146103e6578063e30081a01461040f578063ed88c68e14610438578063f2fde38b14610442578063f3fef3a31461046b578063faa381fb1461049b5761012a565b806397732df5146102d75780639e87a5cd14610302578063b65ce11c1461032d578063c0f8cffc1461036a578063cc97d44b146103a75761012a565b8063715018a6116100f2578063715018a6146102025780637b66e17f146102195780637bdfd6d5146102565780637f358439146102815780638da5cb5b146102ac5761012a565b806317be85c31461012f5780632a332b2a1461015a57806365fbc7f0146101835780636b69a5921461019a5780636e5b6b28146101c5575b600080fd5b34801561013b57600080fd5b506101446104d8565b6040516101519190611d87565b60405180910390f35b34801561016657600080fd5b50610181600480360381019061017c9190611756565b6104e2565b005b34801561018f57600080fd5b50610198610526565b005b3480156101a657600080fd5b506101af610530565b6040516101bc9190611d87565b60405180910390f35b3480156101d157600080fd5b506101ec60048036038101906101e7919061186a565b61053c565b6040516101f99190611d87565b60405180910390f35b34801561020e57600080fd5b50610217610599565b005b34801561022557600080fd5b50610240600480360381019061023b919061186a565b610621565b60405161024d9190611b2b565b60405180910390f35b34801561026257600080fd5b5061026b610669565b6040516102789190611d87565b60405180910390f35b34801561028d57600080fd5b5061029661066f565b6040516102a39190611d87565b60405180910390f35b3480156102b857600080fd5b506102c1610675565b6040516102ce9190611b2b565b60405180910390f35b3480156102e357600080fd5b506102ec61069e565b6040516102f99190611d87565b60405180910390f35b34801561030e57600080fd5b506103176106a4565b6040516103249190611b46565b60405180910390f35b34801561033957600080fd5b50610354600480360381019061034f919061186a565b6106ce565b6040516103619190611d87565b60405180910390f35b34801561037657600080fd5b50610391600480360381019061038c9190611756565b61072f565b60405161039e9190611d87565b60405180910390f35b3480156103b357600080fd5b506103ce60048036038101906103c99190611756565b61077b565b6040516103dd93929190611bbb565b60405180910390f35b3480156103f257600080fd5b5061040d600480360381019061040891906117c3565b6109f7565b005b34801561041b57600080fd5b5061043660048036038101906104319190611756565b610dc0565b005b610440610e04565b005b34801561044e57600080fd5b5061046960048036038101906104649190611756565b61109a565b005b61048560048036038101906104809190611783565b611192565b6040516104929190611d87565b60405180910390f35b3480156104a757600080fd5b506104c260048036038101906104bd919061186a565b611403565b6040516104cf9190611b2b565b60405180910390f35b6000600554905090565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600581905550565b678ac7230489e8000081565b60008061056a600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611440565b90506000670de0b6b3a764000084836105839190612123565b61058d9190611e6a565b90508092505050919050565b6105a16114e0565b73ffffffffffffffffffffffffffffffffffffffff166105bf610675565b73ffffffffffffffffffffffffffffffffffffffff1614610615576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060c90611d07565b60405180910390fd5b61061f60006114e8565b565b600060068281548110610637576106366123d0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60055481565b60045481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000670de0b6b3a7640000826106e49190612123565b91506000610713600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611440565b90506000610723848360126115ac565b90508092505050919050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b6060806060600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030182805461085290612297565b80601f016020809104026020016040519081016040528092919081815260200182805461087e90612297565b80156108cb5780601f106108a0576101008083540402835291602001916108cb565b820191906000526020600020905b8154815290600101906020018083116108ae57829003601f168201915b505050505092508180546108de90612297565b80601f016020809104026020016040519081016040528092919081815260200182805461090a90612297565b80156109575780601f1061092c57610100808354040283529160200191610957565b820191906000526020600020905b81548152906001019060200180831161093a57829003601f168201915b5050505050915080805461096a90612297565b80601f016020809104026020016040519081016040528092919081815260200182805461099690612297565b80156109e35780601f106109b8576101008083540402835291602001916109e3565b820191906000526020600020905b8154815290600101906020018083116109c657829003601f168201915b505050505090509250925092509193909250565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610a86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7d90611d67565b60405180910390fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0a90611c47565b60405180910390fd5b6000835111610b57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4e90611c27565b60405180910390fd5b6000815111610b9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9290611d47565b60405180910390fd5b6000825111610bdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd690611c87565b60405180910390fd5b60036000815480929190610bf2906122fa565b91905055506001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600060405180608001604052806000815260200185815260200184815260200183815250905080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001019080519060200190610cdb9291906115da565b506040820151816002019080519060200190610cf89291906115da565b506060820151816003019080519060200190610d159291906115da565b509050506006339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fe9f39fb6db7e0aea1569ad4adbc00390e6e9e7eec20e749b1560054a83147f4d6000858585604051610db29493929190611b61565b60405180910390a150505050565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610e93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8a90611d27565b60405180910390fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610f1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1690611ca7565b60405180910390fd5b678ac7230489e80000610f313461053c565b1015610f72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6990611c67565b60405180910390fd5b3460046000828254610f849190611e14565b9250508190555034600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610fdd9190611e14565b925050819055503360096000600560008154610ff8906122fa565b919050819055815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f5d7b332009e5ea66f8cd6b2238038a62b1614c1a9df2ea82cb185ba7db1e047a346040516110909190611d87565b60405180910390a2565b6110a26114e0565b73ffffffffffffffffffffffffffffffffffffffff166110c0610675565b73ffffffffffffffffffffffffffffffffffffffff1614611116576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110d90611d07565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611186576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117d90611c07565b60405180910390fd5b61118f816114e8565b50565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061123b5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61127a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127190611cc7565b60405180910390fd5b81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015410156112ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f690611ce7565b60405180910390fd5b81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461134d919061217d565b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156113f9573d6000803e3d6000fd5b5081905092915050565b60006009600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561148957600080fd5b505afa15801561149d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c19190611897565b5050509150506402540be400816114d8919061200c565b915050919050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008282600a6115bc9190611eee565b856115c79190612123565b6115d19190611e6a565b90509392505050565b8280546115e690612297565b90600052602060002090601f016020900481019282611608576000855561164f565b82601f1061162157805160ff191683800117855561164f565b8280016001018555821561164f579182015b8281111561164e578251825591602001919060010190611633565b5b50905061165c9190611660565b5090565b5b80821115611679576000816000905550600101611661565b5090565b600061169061168b84611dc7565b611da2565b9050828152602081018484840111156116ac576116ab612433565b5b6116b7848285612255565b509392505050565b6000813590506116ce816126e4565b92915050565b6000815190506116e3816126fb565b92915050565b600082601f8301126116fe576116fd61242e565b5b813561170e84826020860161167d565b91505092915050565b60008135905061172681612712565b92915050565b60008151905061173b81612712565b92915050565b60008151905061175081612729565b92915050565b60006020828403121561176c5761176b61243d565b5b600061177a848285016116bf565b91505092915050565b6000806040838503121561179a5761179961243d565b5b60006117a8858286016116bf565b92505060206117b985828601611717565b9150509250929050565b6000806000606084860312156117dc576117db61243d565b5b600084013567ffffffffffffffff8111156117fa576117f9612438565b5b611806868287016116e9565b935050602084013567ffffffffffffffff81111561182757611826612438565b5b611833868287016116e9565b925050604084013567ffffffffffffffff81111561185457611853612438565b5b611860868287016116e9565b9150509250925092565b6000602082840312156118805761187f61243d565b5b600061188e84828501611717565b91505092915050565b600080600080600060a086880312156118b3576118b261243d565b5b60006118c188828901611741565b95505060206118d2888289016116d4565b94505060406118e38882890161172c565b93505060606118f48882890161172c565b925050608061190588828901611741565b9150509295509295909350565b61191b816121b1565b82525050565b61192a8161220d565b82525050565b6119398161221f565b82525050565b600061194a82611df8565b6119548185611e03565b9350611964818560208601612264565b61196d81612442565b840191505092915050565b6000611985602683611e03565b915061199082612460565b604082019050919050565b60006119a8601d83611e03565b91506119b3826124af565b602082019050919050565b60006119cb601283611e03565b91506119d6826124d8565b602082019050919050565b60006119ee601b83611e03565b91506119f982612501565b602082019050919050565b6000611a11602183611e03565b9150611a1c8261252a565b604082019050919050565b6000611a34601b83611e03565b9150611a3f82612579565b602082019050919050565b6000611a57600d83611e03565b9150611a62826125a2565b602082019050919050565b6000611a7a602883611e03565b9150611a85826125cb565b604082019050919050565b6000611a9d602083611e03565b9150611aa88261261a565b602082019050919050565b6000611ac0601a83611e03565b9150611acb82612643565b602082019050919050565b6000611ae3602283611e03565b9150611aee8261266c565b604082019050919050565b6000611b06602083611e03565b9150611b11826126bb565b602082019050919050565b611b25816121ed565b82525050565b6000602082019050611b406000830184611912565b92915050565b6000602082019050611b5b6000830184611921565b92915050565b6000608082019050611b766000830187611930565b8181036020830152611b88818661193f565b90508181036040830152611b9c818561193f565b90508181036060830152611bb0818461193f565b905095945050505050565b60006060820190508181036000830152611bd5818661193f565b90508181036020830152611be9818561193f565b90508181036040830152611bfd818461193f565b9050949350505050565b60006020820190508181036000830152611c2081611978565b9050919050565b60006020820190508181036000830152611c408161199b565b9050919050565b60006020820190508181036000830152611c60816119be565b9050919050565b60006020820190508181036000830152611c80816119e1565b9050919050565b60006020820190508181036000830152611ca081611a04565b9050919050565b60006020820190508181036000830152611cc081611a27565b9050919050565b60006020820190508181036000830152611ce081611a4a565b9050919050565b60006020820190508181036000830152611d0081611a6d565b9050919050565b60006020820190508181036000830152611d2081611a90565b9050919050565b60006020820190508181036000830152611d4081611ab3565b9050919050565b60006020820190508181036000830152611d6081611ad6565b9050919050565b60006020820190508181036000830152611d8081611af9565b9050919050565b6000602082019050611d9c6000830184611b1c565b92915050565b6000611dac611dbd565b9050611db882826122c9565b919050565b6000604051905090565b600067ffffffffffffffff821115611de257611de16123ff565b5b611deb82612442565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000611e1f826121ed565b9150611e2a836121ed565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611e5f57611e5e612343565b5b828201905092915050565b6000611e75826121ed565b9150611e80836121ed565b925082611e9057611e8f612372565b5b828204905092915050565b6000808291508390505b6001851115611ee557808604811115611ec157611ec0612343565b5b6001851615611ed05780820291505b8081029050611ede85612453565b9450611ea5565b94509492505050565b6000611ef9826121ed565b9150611f04836121ed565b9250611f317fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611f39565b905092915050565b600082611f495760019050612005565b81611f575760009050612005565b8160018114611f6d5760028114611f7757611fa6565b6001915050612005565b60ff841115611f8957611f88612343565b5b8360020a915084821115611fa057611f9f612343565b5b50612005565b5060208310610133831016604e8410600b8410161715611fdb5782820a905083811115611fd657611fd5612343565b5b612005565b611fe88484846001611e9b565b92509050818404811115611fff57611ffe612343565b5b81810290505b9392505050565b6000612017826121c3565b9150612022836121c3565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561206157612060612343565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561209e5761209d612343565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156120db576120da612343565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561211857612117612343565b5b828202905092915050565b600061212e826121ed565b9150612139836121ed565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561217257612171612343565b5b828202905092915050565b6000612188826121ed565b9150612193836121ed565b9250828210156121a6576121a5612343565b5b828203905092915050565b60006121bc826121cd565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061221882612231565b9050919050565b600061222a826121ed565b9050919050565b600061223c82612243565b9050919050565b600061224e826121cd565b9050919050565b82818337600083830152505050565b60005b83811015612282578082015181840152602081019050612267565b83811115612291576000848401525b50505050565b600060028204905060018216806122af57607f821691505b602082108114156122c3576122c26123a1565b5b50919050565b6122d282612442565b810181811067ffffffffffffffff821117156122f1576122f06123ff565b5b80604052505050565b6000612305826121ed565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561233857612337612343565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c69642e204e616d652063616e6e6f7420626520656d707479000000600082015250565b7f416c726561647920726567697374657265640000000000000000000000000000600082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b7f496e76616c69642e204c617469747564652063616e6e6f7420626520656d707460008201527f7900000000000000000000000000000000000000000000000000000000000000602082015250565b7f596f75206e65656420746f207265676973746572206669727374210000000000600082015250565b7f4e6f7420746865206f776e657200000000000000000000000000000000000000600082015250565b7f43616e2774207769746864726177206d6f7265207468616e20646f6e6174656460008201527f20616d6f756e7421000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4f776e657220697320616c7265616479206120646f6e61746f72000000000000600082015250565b7f496e76616c69642e204c6f6e6769747564652063616e6e6f7420626520656d7060008201527f7479000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e65722063616e6e6f7420726567697374657220617320646f6e61746f72600082015250565b6126ed816121b1565b81146126f857600080fd5b50565b612704816121c3565b811461270f57600080fd5b50565b61271b816121ed565b811461272657600080fd5b50565b612732816121f7565b811461273d57600080fd5b5056fea2646970667358221220c99ee3367447e5cbe691569191f5deb053c4410f6b93716355316da8f5f572ae64736f6c63430008070033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 893,
        "contract": "contracts/Donate.sol:Donate",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1504,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_pickMe",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1506,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_dlottery",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 1508,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_totalDonators",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1510,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_totalDonations",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1512,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_entries",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1515,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_donators",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 1519,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_addressToRegistered",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1524,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_addressToDonatorData",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(DonatorData)1493_storage)"
      },
      {
        "astId": 1528,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_idToAddress",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 1531,
        "contract": "contracts/Donate.sol:Donate",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(AggregatorV3Interface)103"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)103": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(DonatorData)1493_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Donate.DonatorData)",
        "numberOfBytes": "32",
        "value": "t_struct(DonatorData)1493_storage"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(DonatorData)1493_storage": {
        "encoding": "inplace",
        "label": "struct Donate.DonatorData",
        "members": [
          {
            "astId": 1486,
            "contract": "contracts/Donate.sol:Donate",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1488,
            "contract": "contracts/Donate.sol:Donate",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 1490,
            "contract": "contracts/Donate.sol:Donate",
            "label": "latitude",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 1492,
            "contract": "contracts/Donate.sol:Donate",
            "label": "longitude",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}